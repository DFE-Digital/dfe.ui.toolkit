name: $(BuildDefinitionName)_tag-$(BuildID)_at-$(Date:yyyyMMdd)$(Rev:.r)
resources:
  repositories:
  # Defult branch is master
    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.devops
      ref: main
    - repository: config
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.config
      ref: master

trigger:
  branches:
    include:
    - release/*

pr:
  branches:
    include:
    - main
    - develop

parameters:
- name: AppDeploy
  type: boolean
  displayName: 'App Deployment only'
  default: false
- name: InfrDeploy
  type: boolean
  displayName: 'Infrastrucure Deployment only'
  default: true
- name: tran
  type: boolean
  displayName: 'Transformation Deployment'
  default: false
- name: dev
  type: boolean
  displayName: 'Dev Deployment'
  default: false
- name: test
  type: boolean
  displayName: 'Test Deployment'
  default: false
- name: int
  type: boolean
  displayName: 'INT Deployment'
  default: false
- name: pp
  type: boolean
  displayName: 'Pre-Prod Deployment'
  default: false
- name: pr
  type: boolean
  displayName: 'Prod Deployment'
  default: false

variables:
- group: dsi-global
- name: tran
  ${{ if eq(parameters.tran, 'true') }}:
    value: true
  ${{ else }}:
    value: false
- name: dev
  ${{ if eq(parameters.dev, 'true') }}:
    value: true
  ${{ else }}:
    value: false
- name: test
  ${{ if or(eq(parameters.test, 'true'), contains(variables['Build.SourceBranch'],'develop')) }}:
    value: true
  ${{ else }}:
    value: false
- name: int
  ${{ if or(eq(parameters.int, 'true'), contains(variables['Build.SourceBranch'],'release')) }}:
    value: true
  ${{ else }}:
    value: false
- name: pp
  ${{ if or(eq(parameters.pp, 'true'), contains(variables['Build.SourceBranch'],'release')) }}:
    value: true
  ${{ else }}:
    value: false
- name: pr
  ${{ if or(eq(parameters.pr, 'true'), contains(variables['Build.SourceBranch'],'release')) }}:
    value: true
  ${{ else }}:
    value: false


stages:


# Code Scans & Build the artifact for deployment
- stage: scanBuildApp
  displayName: "Scan tools & Build"
  jobs:
    # Code scaning tools
  - ${{ if eq(parameters.InfrDeploy, 'true') }}:
    - template:  pipeline/checkov.yml@devopsTemplates

  - ${{ if eq(parameters.AppDeploy, 'true') }}:

    - template:  pipeline/eslint.yml@devopsTemplates

    - template:  pipeline/dependencyCheck.yml@devopsTemplates
      parameters:
        npmInstCmd: 'install --force --json --no-package-lock'

    - template: pipeline/build.yml@devopsTemplates
      parameters:
        applicationName: ${{variables.applicationFullName}}
        custRegAuth: $(custRegAuth)
        environmentNames:
          - ${{ if eq(variables.dev, 'true') }}:
            - dev
          - ${{ if eq(variables.test, 'true') }}:
            - test
          - ${{ if eq(variables.int, 'true') }}:
            - int
          - ${{ if eq(variables.pp, 'true') }}:
            - pp
          - ${{ if eq(variables.pr, 'true') }}:
            - pr
        pm2ProcessFileName: process.json
        nodeVersionSpec: '14.18.1'
        npmInstCmd: 'install --force --json --no-package-lock'
        npmPruneFixCmd: 'install --production --json --force --no-package-lock'

- ${{ each var in variables }}:
  - ${{ if le(length(var.key), 4) }}:
    - ${{ if eq(var.value, 'true') }}:
      - stage: Deployment_${{var.Key}}
        displayName: "Deployment [${{var.Key}}]"
        variables:
        - group: dsi-${{var.key}}-kv
        jobs:
          - job: copyfiles
            steps:
              - task: AzureCLI@2
                displayName: upload to storage account
                inputs:
                    azureSubscription: $(devServiceConnection)
                    scriptType: 'pscore'
                    scriptLocation: 'scriptPath'
                    scriptPath: 'DevOps/powershell/cdnContentDeployment.ps1'
                    workingDirectory: $(System.DefaultWorkingDirectory)
