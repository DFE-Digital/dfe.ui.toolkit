name: $(BuildDefinitionName)_tag-$(BuildID)_at-$(Date:yyyyMMdd)$(Rev:.r)
resources:
  repositories:
  # Defult branch is master
    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.devops
      ref: feature/DSI-5680
    - repository: config
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.config
      ref: feature/DSI-5680

trigger:
  branches:
    include:
    - release/*

pr:
  branches:
    include:
    - main
    - develop

parameters:
- name: AppDeploy
  type: boolean
  displayName: 'App Deployment only'
  default: false
- name: InfrDeploy
  type: boolean
  displayName: 'Infrastrucure Deployment only'
  default: true
- name: tran
  type: boolean
  displayName: 'Transformation Deployment'
  default: false
- name: dev
  type: boolean
  displayName: 'Dev Deployment'
  default: false
- name: test
  type: boolean
  displayName: 'Test Deployment'
  default: false
- name: int
  type: boolean
  displayName: 'INT Deployment'
  default: false
- name: pp
  type: boolean
  displayName: 'Pre-Prod Deployment'
  default: false
- name: pr
  type: boolean
  displayName: 'Prod Deployment'
  default: false

variables:
- group: dsi-global
- name: tran
  ${{ if eq(parameters.tran, 'true') }}:
    value: true
  ${{ else }}:
    value: false
- name: dev
  ${{ if eq(parameters.dev, 'true') }}:
    value: true
  ${{ else }}:
    value: false
- name: test
  ${{ if or(eq(parameters.test, 'true'), contains(variables['Build.SourceBranch'],'develop')) }}:
    value: true
  ${{ else }}:
    value: false
- name: int
  ${{ if or(eq(parameters.int, 'true'), contains(variables['Build.SourceBranch'],'release')) }}:
    value: true
  ${{ else }}:
    value: false
- name: pp
  ${{ if or(eq(parameters.pp, 'true'), contains(variables['Build.SourceBranch'],'release')) }}:
    value: true
  ${{ else }}:
    value: false
- name: pr
  ${{ if or(eq(parameters.pr, 'true'), contains(variables['Build.SourceBranch'],'release')) }}:
    value: true
  ${{ else }}:
    value: false


stages:

- ${{ each var in variables }}:
  - ${{ if le(length(var.key), 4) }}:
    - ${{ if eq(var.value, 'true') }}:
      - stage: Deployment_${{var.Key}}
        displayName: "Deployment [${{var.Key}}]"
        variables:
        - group: dsi-${{var.key}}-kv
        jobs:
          - job: copyfiles
            steps:
             - task: AzureCLI@1
              displayName: White List Agent IP
              inputs:
                azureSubscription: $(devServiceConnection)
                scriptLocation: inlineScript
                inlineScript: |
                  $publicIp = Invoke-RestMethod -uri https://api.ipify.org
                  az storage account network-rule add -g $(ShdResourceGroupName) --account-name $(StorageAccountName) --ip-address $publicIp
            - task: AzureCLI@1
              displayName: Deploy the UI
              inputs:
                azureSubscription: $(devServiceConnection)
                scriptLocation: inlineScript
                inlineScript: |
                  az storage blob upload-batch \
                    --destination "ui-assets-test" \
                    --account-name "s141d01signinshdstr" \
                    --source "$(Agent.BuildDirectory)/$(outputDir)"
           

