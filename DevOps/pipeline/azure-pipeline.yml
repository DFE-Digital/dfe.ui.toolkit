name: $(BuildDefinitionName)_tag-$(BuildID)_at-$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
    - release/*
    - feature/*

parameters:
- name: cdn 
  type: boolean
  displayName: 'New Version of CDN'
  default: true
- name: tran 
  type: boolean
  displayName: 'Transformation Deployment'
  default: false
- name: dev
  type: boolean
  displayName: 'Dev Deployment'
  default: false
- name: test
  type: boolean
  displayName: 'Test Deployment'
  default: false
- name: int
  type: boolean
  displayName: 'INT Deployment'
  default: false
- name: pp
  type: boolean
  displayName: 'Pre-Prod Deployment'
  default: false
- name: pr
  type: boolean
  displayName: 'Prod Deployment'
  default: false

variables:
- group: dsi-global
- name: tran
  ${{ if eq(parameters.tran, 'true') }}: 
    value: true
  ${{ else }}:
    value: false
- name: dev
  ${{ if eq(parameters.dev, 'true') }}:
    value: true
  ${{ else }}:
    value: false
- name: test
  ${{ if or(eq(parameters.test, 'true'), contains(variables['Build.SourceBranch'],'develop')) }}:
    value: true
  ${{ else }}:
    value: false
- name: int
  ${{ if or(eq(parameters.int, 'true'), contains(variables['Build.SourceBranch'],'release')) }}:
    value: true
  ${{ else }}:
    value: false
- name: pp
  ${{ if or(eq(parameters.pp, 'true'), contains(variables['Build.SourceBranch'],'release')) }}:
    value: true
  ${{ else }}:
    value: false
- name: pr
  ${{ if or(eq(parameters.pr, 'true'), contains(variables['Build.SourceBranch'],'release')) }}:
    value: true
  ${{ else }}:
    value: false

stages:
- ${{ each var in variables }}:
  - ${{ if in(var.key, 'tran','dev','test','int','pp','pr') }}:
    - ${{ if eq(var.value, 'true') }}:
      - stage: Deployment_${{var.Key}}
        variables:
        - group: dsi-${{var.key}}-kv
        - name: SubShortName
          value: $(platformGlobalIdentifier)$(environmentId)
        - name: storageAccountName
          value: $(SubShortName)signinshdstr
        - name: ShdResourceGroupName
          value: $(SubShortName)-shd
        - name: azureCdnName
          value: $(SubShortName)-signin-shd-cdn
        - name: cdnEndpointName
          value: $(SubShortName)-signin-shd-cdnep
        - name: keyVaultName
          value: $(SubShortName)-signin-kv
        displayName: "Deployment [${{var.Key}}]"
        jobs:
        - deployment: 'Deploy_${{var.Key}}'
          pool:
            vmImage: 'windows-latest'
          displayName: Updated content of CDN
          environment: ${{var.Key}}
          strategy:
            runOnce:
              deploy:
                steps:
                  - checkout: self

                  - task: AzureCLI@2
                    displayName: 'Empty Storage Container Contents'
                    inputs:
                      ${{ if or(eq(var.key, 'dev'), eq(var.key, 'tran')) }}:
                        azureSubscription: $(devServiceConnection)
                      ${{ elseif eq(var.key, 'pr') }}:
                        azureSubscription: $(prodServiceConnection)
                      ${{ else }}:
                        azureSubscription: $(testServiceConnection)
                      scriptType: pscore
                      scriptLocation: inlineScript
                      inlineScript: |
                        $publicIp = Invoke-RestMethod -uri https://api.ipify.org
                        az storage account network-rule add -g $(ShdResourceGroupName) --account-name $(storageAccountName) --ip-address $publicIp

                        do {
                          Start-Sleep 30
                          $results=$(az storage blob delete-batch --account-name $(storageAccountName) --source $(UIContainerName))
                        } until ($results -NotLike "*blocked*")
                        
                        Write-Host "##vso[task.setvariable variable=agentIp]$publicIp"


                  - task: AzureFileCopy@2
                    displayName: Copy Content to Storage Account Container
                    inputs:
                      SourcePath: $(System.DefaultWorkingDirectory)/dist
                      ${{ if or(eq(var.key, 'dev'), eq(var.key, 'tran')) }}:
                        azureSubscription: $(devServiceConnection)
                      ${{ elseif eq(var.key, 'pr') }}:
                        azureSubscription: $(prodServiceConnection)
                      ${{ else }}:
                        azureSubscription: $(testServiceConnection)
                      Destination: AzureBlob
                      storage: '$(storageAccountName)'
                      ContainerName: '$(UIContainerName)'
                        
                  - task: AzureCLI@2
                    displayName: Purge content & Updated CDN Version
                    env:
                      newCdnV: ${{ parameters.cdn }}
                    inputs:
                      ${{ if or(eq(var.key, 'dev'), eq(var.key, 'tran')) }}:
                        azureSubscription: $(devServiceConnection)
                      ${{ elseif eq(var.key, 'pr') }}:
                        azureSubscription: $(prodServiceConnection)
                      ${{ else }}:
                        azureSubscription: $(testServiceConnection)
                      scriptType: pscore
                      scriptLocation: inlineScript
                      inlineScript: |
                        az storage account network-rule remove -g $(ShdResourceGroupName) --account-name $(storageAccountName) --ip-address $(agentIp)

                        az cdn endpoint purge --content-paths /* --profile-name $(azureCdnName) -g $(ShdResourceGroupName) -n $(cdnEndpointName) 

                        if($env:newCdnV){
                          $cdnAssetsVersion = [decimal]$(cdnAssetsVersion)
                          $newCdnAssetsVersion = $cdnAssetsVersion+0.1
                          az keyvault secret set --name cdnAssetsVersion --vault-name $(keyVaultName) --value $newCdnAssetsVersion
                        }

