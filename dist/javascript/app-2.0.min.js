!function(a){var i=a.$,n=a.Cookies;if(n&&i){function r(e,t){var n,a=t||(n=i.extend(d,{}),i.each(n,function(e){n[e]=!0}),n);c(s,a),c(o,!0),e.target===h[0]&&u.slideUp()}var o="cookies_preferences_set",s="cookies_policy",d={essential:!0,settings:!1,usage:!0},l={expires:365,secure:!0,domain:".education.gov.uk"},e=function(e){var t=n.get(e);return t?JSON.parse(t):t},c=function(e,t){return n.set(e,t,l)},u=i("#dsi-cookie-banner.global-cookie-message-dfe-sign-in"),h=u.find("button.cookie-accept");e(o)||(c(s,d),h.click(r),"/cookies"!==a.location.pathname?u.slideDown():u.show());var f=i("#dsi-cookie-form.cookies-page-dfe-sign-in__preferences-form");f.length&&f.on("submit",function(e){e.preventDefault();var t={settings:!!f.find("input[name='cookie.settings']:checked").val()},n=i.extend(d,t);return r(e,n),document.referrer?a.location=document.referrer:a.location.pathname="/",!1})}}(window),function(e){"use strict";var s=e.GOVUK||{};s.details={NATIVE_DETAILS:"boolean"==typeof document.createElement("details").open,KEY_ENTER:13,KEY_SPACE:32,started:!1,addEvent:function(e,t,n){e.addEventListener?e.addEventListener(t,function(e){n(e,e.target)},!1):e.attachEvent&&e.attachEvent("on"+t,function(e){n(e,e.srcElement)})},removeEvent:function(e,t){e.removeEventListener?e.removeEventListener(t,function(e){},!1):e.detachEvent&&e.detachEvent("on"+t,function(e){})},charCode:function(e){return"number"==typeof e.which?e.which:e.keyCode},preventDefault:function(e){e.preventDefault?e.preventDefault():e.returnValue=!1},addClickEvent:function(e,n){s.details.addEvent(e,"keypress",function(e,t){s.details.charCode(e)!==s.details.KEY_ENTER&&s.details.charCode(e)!==s.details.KEY_SPACE||"summary"===t.nodeName.toLowerCase()&&(s.details.preventDefault(e),t.click?t.click():n(e,t))}),s.details.addEvent(e,"keyup",function(e,t){s.details.charCode(e)===s.details.KEY_SPACE&&"SUMMARY"===t.nodeName&&s.details.preventDefault(e)}),s.details.addEvent(e,"click",function(e,t){n(e,t)})},getAncestor:function(e,t){do{if(!e||e.nodeName.toLowerCase()===t)break;e=e.parentNode}while(e);return e},addDetailsPolyfill:function(e,t){if(t=t||document.body,!s.details.started&&(s.details.started=!0,0!==(e=t.getElementsByTagName("details")).length)){for(var n=e.length,a=0;a<n;a++){var i=e[a];if(i.__summary=i.getElementsByTagName("summary").item(0),i.__content=i.getElementsByTagName("div").item(0),!i.__summary||!i.__content)return;i.__content.id||(i.__content.id="details-content-"+a),i.setAttribute("role","group"),i.__summary.setAttribute("role","button"),i.__summary.setAttribute("aria-controls",i.__content.id),s.details.NATIVE_DETAILS||(i.__summary.tabIndex=0);var r=null!==i.getAttribute("open");if(!0==r?(i.__summary.setAttribute("aria-expanded","true"),i.__content.setAttribute("aria-hidden","false")):(i.__summary.setAttribute("aria-expanded","false"),i.__content.setAttribute("aria-hidden","true"),s.details.NATIVE_DETAILS||(i.__content.style.display="none")),i.__summary.__details=i,!s.details.NATIVE_DETAILS){var o=document.createElement("i");!0==r?(o.className="arrow arrow-open",o.appendChild(document.createTextNode("▼"))):(o.className="arrow arrow-closed",o.appendChild(document.createTextNode("►"))),i.__summary.__twisty=i.__summary.insertBefore(o,i.__summary.firstChild),i.__summary.__twisty.setAttribute("aria-hidden","true")}}s.details.addClickEvent(t,function(e,t){return!(t=s.details.getAncestor(t,"summary"))||s.details.statechange(t)})}},statechange:function(e){var t="true"===e.__details.__summary.getAttribute("aria-expanded"),n="true"===e.__details.__content.getAttribute("aria-hidden");e.__details.__summary.setAttribute("aria-expanded",t?"false":"true"),e.__details.__content.setAttribute("aria-hidden",n?"false":"true"),s.details.NATIVE_DETAILS||(e.__details.__content.style.display=t?"none":"",null!==e.__details.getAttribute("open")?e.__details.removeAttribute("open"):e.__details.setAttribute("open","open"));return e.__twisty&&(e.__twisty.firstChild.nodeValue=t?"►":"▼",e.__twisty.setAttribute("class",t?"arrow arrow-closed":"arrow arrow-open")),!0},destroy:function(e){s.details.removeEvent(e,"click")},init:function(e){s.details.addEvent(document,"DOMContentLoaded",s.details.addDetailsPolyfill),s.details.addEvent(window,"load",s.details.addDetailsPolyfill)}},e.GOVUK=s}(window);var NSA=NSA||{},filterBoxes=$(".filter-box");NSA.filters={init:function(){filterBoxes.each(function(){var e=$(this),t=e.find(".container-head"),n=t.find(".option-select-label"),a=e.find("input:checkbox"),i=$("<button />").addClass("js-container-head"),r=$("<div />").addClass("js-selected-counter");i.on("click",function(e){var t=$(this).next();$(this).hasClass("closed")?(t.show(),$(this).removeClass("closed").attr("aria-expanded",!0)):(t.hide(),$(this).addClass("closed").attr("aria-expanded",!1)),e.preventDefault()}).append(n,r),t.replaceWith(i),a.on("change",function(){r.text(function(){return 0<a.filter(":checked").length?a.filter(":checked").length+" selected":""})})})}},0<filterBoxes.length&&NSA.filters.init();var gaEvent=$("#ga-event");if(0<gaEvent.length){var category=gaEvent.data("category"),label=gaEvent.data("label"),event=gaEvent.data("event");""!==event&&""!==label&&""!==category&&ga("send","event",category,event,label)}function getParameterByName(e,t){t=t||window.location.href,e=e.replace(/[\[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}function sortTable(e){var t,n,a,i,r,o,s,d,l=0;for(t=$("table.sortable"),a=!0,d="a";a;){for(a=!1,n=t.find("tr"),i=1;i<n.length-1;i++)if(s=!1,r=n[i].getElementsByTagName("TD")[e],o=n[i+1].getElementsByTagName("TD")[e],"a"===d){if(r.innerHTML.toLowerCase()>o.innerHTML.toLowerCase()){s=!0;break}}else if("d"===d&&r.innerHTML.toLowerCase()<o.innerHTML.toLowerCase()){s=!0;break}s?(n[i].parentNode.insertBefore(n[i+1],n[i]),a=!0,l++):0===l&&"a"===d&&(d="d",a=!0)}return d}$(".notification a").on("click",function(){$(this).data("clientid")&&ga("send","event","migration-help-pdf","download",$(this).data("clientid"))}),(NSA=NSA||{}).modal={elems:{links:$(".modal-link"),modals:$(".modal")},init:function(){this.modalBg(),this.setUpEvents()},modalBg:function(){var e=this,t=$("<div>").addClass("modal-bg").hide().on("click",function(){e.hideModals()});$("body").append(t)},setUpEvents:function(){var n=this;this.elems.links.on("click",function(e){var t=$(this).attr("href");n.showModal($(t)),e.preventDefault()}),n.elems.modals.find(".close").on("click",function(e){n.hideModals(),e.preventDefault()}),$("body").on("keydown",function(e){27===(e.keyCode||e.which)&&n.hideModals()})},showModal:function(e){$("html").addClass("modal-open"),$(".modal-bg").show(),e.show()},hideModals:function(){$("html").removeClass("modal-open"),$(".modal-bg").hide(),this.elems.modals.hide()}},NSA.modal.init(),function(e){"use strict";var f=e.jQuery,t=e.GOVUK||{};function n(){var o="ShowHideContent",i='[data-target] > input[type="radio"]',t='[data-target] > input[type="checkbox"]',n="a.js-toggle-content";function s(){var e=f(this),t=d(e);t.length&&(e.attr("aria-controls",t.attr("id")),e.attr("aria-expanded","false"),t.attr("aria-hidden","true"))}function d(e){var t=e.attr("aria-controls");return t=t||e.closest("[data-target]").data("target"),f("#"+t)}function r(e,t){t.hasClass("js-hidden")&&(t.removeClass("js-hidden"),t.attr("aria-hidden","false"),e.attr("aria-controls")&&e.attr("aria-expanded","true"))}function l(e,t){(t=t||d(e)).hasClass("js-hidden")||(t.addClass("js-hidden"),t.attr("aria-hidden","true"),e.attr("aria-controls")&&e.attr("aria-expanded","false"))}function a(e,t){var n=i+"[name="+e.attr("name").replace("[","\\[").replace("]","\\]")+"][aria-controls]",a=e.closest("form");(a.length?a.find(n):f(n)).each(function(){l(f(this))}),e.is("[aria-controls]")&&r(e,t)}function c(e,t){e.is(":checked")?r(e,t):l(e,t)}function u(e,t,n){t.hasClass("js-hidden")?r(e,t):l(e,t),n.preventDefault()}function h(n,e,t,a){function i(e){var t=f(this);a(t,d(t),e)}n=n||f(document.body);var r=f(e);r.each(s),f.each(t,function(e,t){n.on("click."+o,t,i)}),r.is(":checked")&&r.filter(":checked").each(i)}this.showHideRadioToggledContent=function(e){var t;h(e,i,(t=[],f(i).map(function(){var e=f(this).attr("name");return-1===f.inArray(e,t)?(t.push(e),'input[type="radio"][name="'+f(this).attr("name")+'"]'):null})),a)},this.showHideCheckboxToggledContent=function(e){h(e,t,[t],c)},this.showHideLinkToggledContent=function(e){h(e,n,[n],u)},this.destroy=function(e){(e=e||f(document.body)).off("."+o)}}n.prototype.init=function(e){this.showHideRadioToggledContent(e),this.showHideCheckboxToggledContent(e),this.showHideLinkToggledContent(e)},t.ShowHideContent=n,e.GOVUK=t}(window),(NSA=NSA||{}).signin={form:$(".form-signin"),init:function(){this.setupEvents()},setupEvents:function(){this.form.on("submit",this,this.handleSubmit)},handleSubmit:function(e){var t=$(this),n=t.find("input").not(":checkbox"),a={},i=$(this).find("button:submit"),r=i.eq(0);i.attr("disabled","disabled"),r.css("min-width",r.outerWidth()+"px"),r.find(".loader").removeClass("vh"),n.each(function(){a[this.name]=$(this).val()}),$("#password").prop("type","password").next().removeClass("type-password"),$.ajax({type:"POST",data:a,url:t.attr("action"),context:e.data,dataType:"json",success:function(e){e.redirect?window.location.href=e.uri:e.isFailedLogin?(this.resetValidation(t),this.showValidationMessage(e.validationMessages),this.showInlineValidation(e.validationMessages),i.removeAttr("disabled"),r.find(".loader").addClass("vh")):(ga("send","event","Login","Successful login",getParameterByName("clientid")),this.buildFormAndSubmit(e))},error:function(){this.resetValidation(t),this.showValidationMessage(),i.removeAttr("disabled"),r.find(".loader").addClass("vh")}}),e.preventDefault()},resetValidation:function(e){var t=e.find(".form-group");$(".error-summary").remove(),t.each(function(){var e=$(this).find("input").eq(0);$(this).hasClass("form-group-error")&&($(this).removeClass("form-group-error"),$(this).find("p.error-message").remove(),e.removeAttr("aria-describedby").removeAttr("aria-invalid"))})},showValidationMessage:function(e){var t=$("<div />").attr("class","error-summary").attr("role","alert").attr("tabindex","-1"),n=$("<h2 />").attr("class","heading-medium error-summary-heading").attr("id","error-summary"),i=$("<ul />").attr("class","error-summary-list");if(e)n.text("Information missing or incorrect"),$.each(e,function(e,t){"loginError"===e&&(e="username",ga("send","event","Login","Failed login","Users login credentials were wrong"));var n=$("<a />").attr("href","#"+e).text(t),a=$("<li />").append(n);i.append(a)});else{n.text("There has been an error");var a=$("<li />").html('Please try again later. If the problem continues, follow the link to <a href="https://help.signin.education.gov.uk/contact/form">submit a support request</a>');i.append(a),ga("send","event","Login","Error occurred","A server error occurred during login")}t.append(n).append(i),$("main").prepend(t),$("html, body").animate({scrollTop:t.offset().top-15},300)},showInlineValidation:function(e){$.each(e,function(e,t){var n=$("input[name="+e+"]"),a=n.parent();a.hasClass("show-password")&&(a=a.parent());var i=a.find("label").first();if(!a.hasClass("form-group-error"))var r=$("<p>").html(t).prop("class","error-message").prop("id","validation-"+e);i.after(r),a.addClass("form-group-error"),n.attr({"aria-describedby":"validation-"+e,"aria-invalid":"true"})})},buildFormAndSubmit:function(e){var a=$("<form />").attr({method:"post",action:e.destination,id:"dfesigninform"});$.each(e.postbackData,function(e,t){var n=$("<input />").attr({type:"hidden",name:e,value:t});a.append(n)}),$("#dfesigninform").remove(),$("body").append(a),a.submit()}},0<$(".form-signin").length&&NSA.signin.init(),$(function(){$("table.sortable thead th").on("click",function(){var e=$("table.sortable thead tr th");e.removeClass("sorted").removeClass("dir-a").removeClass("dir-d");var t=sortTable(e.index($(this)));$(this).addClass("sorted dir-"+t)})});var toggleTips=$(".toggle-help");toggleTips.each(function(){var n,t,e,a;n=$(this),e=$("<span />").attr("class","toggletip"),a=$("<button />").attr("type","button").attr("aria-label","Help").attr("data-toggletip-content",n.html()).text("?").on("click",function(){var e=$(this).data("toggletip-content"),t=$(this).next();window.setTimeout(function(){t.html(function(){return $("<span />").attr("class",function(){return 50<n.html().length?"bubble long":"bubble"}).text(e)})},100)}).on("keydown",function(e){27===(e.keyCode||e.which)&&t.html("")}),t=$("<span />").attr("role","status"),e.append(a,t),n.before(e).remove(),$(document).on("click",function(e){n[0]!==$(e.target)&&t.html("")})});var forms=$("#content form");forms.attr("novalidate","novalidate");NSA=NSA||{};function select2ModelMatcher(e,t){if(t.parentText=t.parentText||"",""===$.trim(e.term))return t;if(t.children&&0<t.children.length){for(var n=$.extend(!0,{},t),a=t.children.length-1;0<=a;a--){var i=t.children[a];i.parentText+=t.parentText+" "+t.text,null==select2ModelMatcher(e,i)&&n.children.splice(a,1)}return 0<n.children.length?n:select2ModelMatcher(e,n)}var r=(t.parentText+" "+t.text).toUpperCase(),o=e.term.toUpperCase();return-1<r.indexOf(o)?t:null}NSA={showPassword:function(){$(".show-password").each(function(e){var t=$(this).find("input:password"),n=$("<label />").prop({for:"show-password-"+e}).html("Show"),a=$("<input />").prop({type:"checkbox",id:"show-password-"+e}).on("change",function(){var e=$(this);t.prop("type",function(){return e.prop("checked")?"text":"password"}),n.html(function(){return e.prop("checked")?"Hide":"Show"}),e.parent().removeClass("type-password"),e.prop("checked")&&e.parent().addClass("type-password")}),i=$("<div />").prop("class","show-password-control").append(a,n);t.after(i)})},backLink:function(){var e=$("<a>").attr({href:"#",class:"link-back"}).text("Back").on("click",function(e){window.history.back(),e.preventDefault()});$(".js-back-link").html(e)}},0<$("select.select2").length&&$("select.select2").select2({matcher:select2ModelMatcher}),0<$(".show-password").length&&NSA.showPassword(),$(".js-back-link")&&NSA.backLink(),$(".under-construction").on("click",function(e){alert("This functionality is not available yet"),e.preventDefault()}),0<$(".notification span.icon").length&&$(".notification span.icon").on("click",function(){$(this).parent().hide()}),0<$("article.organisation-services").length&&($(".information").on("click",function(e){var t=$(this).parent().parent().find(".service-description");e.preventDefault(),t.toggle()}),$(".info-link").on("click",function(e){var t=$(this).parent().next();e.preventDefault(),t.toggle()}));var searchFields=$("form .search-field");if(0<searchFields.length){var loader=$("<span />").addClass("loader spinner-inline"),b1=$("<span />").addClass("ball b-1"),b2=$("<span />").addClass("ball b-2");loader.append(b1).append(b2),searchFields.each(function(){var e=$(this).parent(),t=e.find("button");e.on("submit",function(){t.after(loader).hide()})})}var redirect=$("#redirect-url");$("#add-redirect").on("click",function(){return $('<p><label for="redirect-url"><input class="form-control inputConfig" name="redirect_uris"></label></p>').appendTo(redirect),!1});var logout=$("#logout-url");$("#add-logout").on("click",function(){return $('<p><label for="logout-url"><input class="form-control inputConfig" name="post_logout_redirect_uris"></label></p>').appendTo(logout),!1}),$("#generate-client-secret").on("click",function(){var e=window.niceware.generatePassphrase(8).join("-");return confirm("Are you sure you want to regenerate the client secret?")&&$("input#clientSecret").attr("value",e),!1}),$("#generate-api-secret").on("click",function(){var e=window.niceware.generatePassphrase(8).join("-");return confirm("Are you sure you want to regenerate the api secret?")&&$("input#apiSecret").attr("value",e),!1});var formRegister=$(".prevent-form-double-submission");0<formRegister.length&&formRegister.each(function(){var e=$(formRegister).find("button:submit"),t=e.eq(0);formRegister.on("submit",function(){e.attr("disabled","disabled"),t.css("min-width",t.outerWidth()+"px"),t.append("<span class='loader spinner-inline'> <span class='ball b-1'></span> <span class='ball b-2'></span> <span class='ball b-3'></span> </span>")})});var showHideContent=new GOVUK.ShowHideContent;showHideContent.init(),GOVUK.details.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
