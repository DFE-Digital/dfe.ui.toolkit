!function(a){var i=a.$,n=a.Cookies;if(n&&i){function r(e,t){var n,a=t||(n=i.extend(l,{}),i.each(n,function(e){n[e]=!0}),n);d(s,a),d(o,!0),e.target===u[0]&&c.slideUp()}var o="cookies_preferences_set",s="cookies_policy",l={essential:!0,settings:!1,usage:!0},e=function(e){var t=n.get(e);return t?JSON.parse(t):t},d=function(e,t){return e===s&&function(e){if(a.gtag&&a.gaTrackingId){var t="_gat_gtag_"+a.gaTrackingId.replace(/-/g,"_");e.usage?(a.gtag("js",new Date),a.gtag("config",a.gaTrackingId,{cookie_flags:"secure"})):(a["ga-disable-"+a.gaTrackingId]=!0,n.remove("_ga"),n.remove("_gid"),n.remove(t))}}(t),n.set(e,t,{expires:365,secure:!0})},c=i("#dsi-cookie-banner.global-cookie-message-dfe-sign-in"),u=c.find("button.cookie-accept");e(o)||(d(s,l),u.click(r),"/cookies"!==a.location.pathname?c.slideDown():c.show());var h=i("#dsi-cookie-form.cookies-page-dfe-sign-in__preferences-form");h.length&&h.on("submit",function(e){e.preventDefault();var t={settings:!!h.find("input[name='cookie.settings']:checked").val(),usage:!!h.find("input[name='cookie.usage']:checked").val()},n=i.extend(l,t);return r(e,n),a.history?a.history.back():a.location.pathname="/",!1})}}(window),function(e){"use strict";var s=e.GOVUK||{};s.details={NATIVE_DETAILS:"boolean"==typeof document.createElement("details").open,KEY_ENTER:13,KEY_SPACE:32,started:!1,addEvent:function(e,t,n){e.addEventListener?e.addEventListener(t,function(e){n(e,e.target)},!1):e.attachEvent&&e.attachEvent("on"+t,function(e){n(e,e.srcElement)})},removeEvent:function(e,t){e.removeEventListener?e.removeEventListener(t,function(e){},!1):e.detachEvent&&e.detachEvent("on"+t,function(e){})},charCode:function(e){return"number"==typeof e.which?e.which:e.keyCode},preventDefault:function(e){e.preventDefault?e.preventDefault():e.returnValue=!1},addClickEvent:function(e,n){s.details.addEvent(e,"keypress",function(e,t){s.details.charCode(e)!==s.details.KEY_ENTER&&s.details.charCode(e)!==s.details.KEY_SPACE||"summary"===t.nodeName.toLowerCase()&&(s.details.preventDefault(e),t.click?t.click():n(e,t))}),s.details.addEvent(e,"keyup",function(e,t){s.details.charCode(e)===s.details.KEY_SPACE&&"SUMMARY"===t.nodeName&&s.details.preventDefault(e)}),s.details.addEvent(e,"click",function(e,t){n(e,t)})},getAncestor:function(e,t){do{if(!e||e.nodeName.toLowerCase()===t)break;e=e.parentNode}while(e);return e},addDetailsPolyfill:function(e,t){if(t=t||document.body,!s.details.started&&(s.details.started=!0,0!==(e=t.getElementsByTagName("details")).length)){for(var n=e.length,a=0;a<n;a++){var i=e[a];if(i.__summary=i.getElementsByTagName("summary").item(0),i.__content=i.getElementsByTagName("div").item(0),!i.__summary||!i.__content)return;i.__content.id||(i.__content.id="details-content-"+a),i.setAttribute("role","group"),i.__summary.setAttribute("role","button"),i.__summary.setAttribute("aria-controls",i.__content.id),s.details.NATIVE_DETAILS||(i.__summary.tabIndex=0);var r=null!==i.getAttribute("open");if(!0==r?(i.__summary.setAttribute("aria-expanded","true"),i.__content.setAttribute("aria-hidden","false")):(i.__summary.setAttribute("aria-expanded","false"),i.__content.setAttribute("aria-hidden","true"),s.details.NATIVE_DETAILS||(i.__content.style.display="none")),i.__summary.__details=i,!s.details.NATIVE_DETAILS){var o=document.createElement("i");!0==r?(o.className="arrow arrow-open",o.appendChild(document.createTextNode("▼"))):(o.className="arrow arrow-closed",o.appendChild(document.createTextNode("►"))),i.__summary.__twisty=i.__summary.insertBefore(o,i.__summary.firstChild),i.__summary.__twisty.setAttribute("aria-hidden","true")}}s.details.addClickEvent(t,function(e,t){return!(t=s.details.getAncestor(t,"summary"))||s.details.statechange(t)})}},statechange:function(e){var t="true"===e.__details.__summary.getAttribute("aria-expanded"),n="true"===e.__details.__content.getAttribute("aria-hidden");e.__details.__summary.setAttribute("aria-expanded",t?"false":"true"),e.__details.__content.setAttribute("aria-hidden",n?"false":"true"),s.details.NATIVE_DETAILS||(e.__details.__content.style.display=t?"none":"",null!==e.__details.getAttribute("open")?e.__details.removeAttribute("open"):e.__details.setAttribute("open","open"));return e.__twisty&&(e.__twisty.firstChild.nodeValue=t?"►":"▼",e.__twisty.setAttribute("class",t?"arrow arrow-closed":"arrow arrow-open")),!0},destroy:function(e){s.details.removeEvent(e,"click")},init:function(e){s.details.addEvent(document,"DOMContentLoaded",s.details.addDetailsPolyfill),s.details.addEvent(window,"load",s.details.addDetailsPolyfill)}},e.GOVUK=s}(window);var NSA=NSA||{},filterBoxes=$(".filter-box");NSA.filters={init:function(){filterBoxes.each(function(){var e=$(this),t=e.find(".container-head"),n=t.find(".option-select-label"),a=e.find("input:checkbox"),i=$("<button />").addClass("js-container-head"),r=$("<div />").addClass("js-selected-counter");i.on("click",function(e){var t=$(this).next();$(this).hasClass("closed")?(t.show(),$(this).removeClass("closed").attr("aria-expanded",!0)):(t.hide(),$(this).addClass("closed").attr("aria-expanded",!1)),e.preventDefault()}).append(n,r),t.replaceWith(i),a.on("change",function(){r.text(function(){return 0<a.filter(":checked").length?a.filter(":checked").length+" selected":""})})})}},0<filterBoxes.length&&NSA.filters.init();var gaEvent=$("#ga-event");if(0<gaEvent.length){var category=gaEvent.data("category"),label=gaEvent.data("label"),event=gaEvent.data("event");""!==event&&""!==label&&""!==category&&gtag("event",event,{event_category:category,event_label:label})}function getParameterByName(e,t){t=t||window.location.href,e=e.replace(/[\[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}function sortTable(e){var t,n,a,i,r,o,s,l,d=0;for(t=$("table.sortable"),a=!0,l="a";a;){for(a=!1,n=t.find("tr"),i=1;i<n.length-1;i++)if(s=!1,r=n[i].getElementsByTagName("TD")[e],o=n[i+1].getElementsByTagName("TD")[e],"a"===l){if(r.innerHTML.toLowerCase()>o.innerHTML.toLowerCase()){s=!0;break}}else if("d"===l&&r.innerHTML.toLowerCase()<o.innerHTML.toLowerCase()){s=!0;break}s?(n[i].parentNode.insertBefore(n[i+1],n[i]),a=!0,d++):0===d&&"a"===l&&(l="d",a=!0)}return l}$(".notification a").on("click",function(){$(this).data("clientid")&&gtag("event","download",{event_category:"migration-help-pdf",event_label:$(this).data("clientid")})}),(NSA=NSA||{}).modal={elems:{links:$(".modal-link"),modals:$(".modal")},init:function(){this.modalBg(),this.setUpEvents()},modalBg:function(){var e=this,t=$("<div>").addClass("modal-bg").hide().on("click",function(){e.hideModals()});$("body").append(t)},setUpEvents:function(){var n=this;this.elems.links.on("click",function(e){var t=$(this).attr("href");n.showModal($(t)),e.preventDefault()}),n.elems.modals.find(".close").on("click",function(e){n.hideModals(),e.preventDefault()}),$("body").on("keydown",function(e){27===(e.keyCode||e.which)&&n.hideModals()})},showModal:function(e){$("html").addClass("modal-open"),$(".modal-bg").show(),e.show()},hideModals:function(){$("html").removeClass("modal-open"),$(".modal-bg").hide(),this.elems.modals.hide()}},NSA.modal.init(),function(e){"use strict";var f=e.jQuery,t=e.GOVUK||{};function n(){var o="ShowHideContent",i='[data-target] > input[type="radio"]',t='[data-target] > input[type="checkbox"]',n="a.js-toggle-content";function s(){var e=f(this),t=l(e);t.length&&(e.attr("aria-controls",t.attr("id")),e.attr("aria-expanded","false"),t.attr("aria-hidden","true"))}function l(e){var t=e.attr("aria-controls");return t=t||e.closest("[data-target]").data("target"),f("#"+t)}function r(e,t){t.hasClass("js-hidden")&&(t.removeClass("js-hidden"),t.attr("aria-hidden","false"),e.attr("aria-controls")&&e.attr("aria-expanded","true"))}function d(e,t){(t=t||l(e)).hasClass("js-hidden")||(t.addClass("js-hidden"),t.attr("aria-hidden","true"),e.attr("aria-controls")&&e.attr("aria-expanded","false"))}function a(e,t){var n=i+"[name="+e.attr("name").replace("[","\\[").replace("]","\\]")+"][aria-controls]",a=e.closest("form");(a.length?a.find(n):f(n)).each(function(){d(f(this))}),e.is("[aria-controls]")&&r(e,t)}function c(e,t){e.is(":checked")?r(e,t):d(e,t)}function u(e,t,n){t.hasClass("js-hidden")?r(e,t):d(e,t),n.preventDefault()}function h(n,e,t,a){function i(e){var t=f(this);a(t,l(t),e)}n=n||f(document.body);var r=f(e);r.each(s),f.each(t,function(e,t){n.on("click."+o,t,i)}),r.is(":checked")&&r.filter(":checked").each(i)}this.showHideRadioToggledContent=function(e){var t;h(e,i,(t=[],f(i).map(function(){var e=f(this).attr("name");return-1===f.inArray(e,t)?(t.push(e),'input[type="radio"][name="'+f(this).attr("name")+'"]'):null})),a)},this.showHideCheckboxToggledContent=function(e){h(e,t,[t],c)},this.showHideLinkToggledContent=function(e){h(e,n,[n],u)},this.destroy=function(e){(e=e||f(document.body)).off("."+o)}}n.prototype.init=function(e){this.showHideRadioToggledContent(e),this.showHideCheckboxToggledContent(e),this.showHideLinkToggledContent(e)},t.ShowHideContent=n,e.GOVUK=t}(window),(NSA=NSA||{}).signin={form:$(".form-signin"),init:function(){this.setupEvents()},setupEvents:function(){this.form.on("submit",this,this.handleSubmit)},handleSubmit:function(e){var t=$(this),n=t.find("input").not(":checkbox"),a={},i=$(this).find("button:submit"),r=i.eq(0);i.attr("disabled","disabled"),r.css("min-width",r.outerWidth()+"px"),r.find(".loader").removeClass("vh"),n.each(function(){a[this.name]=$(this).val()}),$("#password").prop("type","password").next().removeClass("type-password"),$.ajax({type:"POST",data:a,url:t.attr("action"),context:e.data,dataType:"json",success:function(e){e.redirect?window.location.href=e.uri:e.isFailedLogin?(this.resetValidation(t),this.showValidationMessage(e.validationMessages),this.showInlineValidation(e.validationMessages),i.removeAttr("disabled"),r.find(".loader").addClass("vh")):(gtag("event","Successful login",{event_category:"Login",event_label:getParameterByName("clientid")}),this.buildFormAndSubmit(e))},error:function(){this.resetValidation(t),this.showValidationMessage(),i.removeAttr("disabled"),r.find(".loader").addClass("vh")}}),e.preventDefault()},resetValidation:function(e){var t=e.find(".form-group");$(".error-summary").remove(),t.each(function(){var e=$(this).find("input").eq(0);$(this).hasClass("form-group-error")&&($(this).removeClass("form-group-error"),$(this).find("p.error-message").remove(),e.removeAttr("aria-describedby").removeAttr("aria-invalid"))})},showValidationMessage:function(e){var t=$("<div />").attr("class","error-summary").attr("role","alert").attr("tabindex","-1"),n=$("<h2 />").attr("class","heading-medium error-summary-heading").attr("id","error-summary"),i=$("<ul />").attr("class","error-summary-list");if(e)n.text("Information missing or incorrect"),$.each(e,function(e,t){"loginError"===e&&(e="username",gtag("event","Failed login",{event_category:"Login",event_label:"Users login credentials were wrong"}));var n=$("<a />").attr("href","#"+e).text(t),a=$("<li />").append(n);i.append(a)});else{n.text("There has been an error");var a=$("<li />").html('Please try again later. If the problem continues, follow the link to <a href="https://help.signin.education.gov.uk/contact/form">submit a support request</a>');i.append(a),gtag("event","Error occurred",{event_category:"Login",event_label:"A server error occurred during login"})}t.append(n).append(i),$("main").prepend(t),$("html, body").animate({scrollTop:t.offset().top-15},300)},showInlineValidation:function(e){$.each(e,function(e,t){var n=$("input[name="+e+"]"),a=n.parent();a.hasClass("show-password")&&(a=a.parent());var i=a.find("label").first();if(!a.hasClass("form-group-error"))var r=$("<p>").html(t).prop("class","error-message").prop("id","validation-"+e);i.after(r),a.addClass("form-group-error"),n.attr({"aria-describedby":"validation-"+e,"aria-invalid":"true"})})},buildFormAndSubmit:function(e){var a=$("<form />").attr({method:"post",action:e.destination,id:"dfesigninform"});$.each(e.postbackData,function(e,t){var n=$("<input />").attr({type:"hidden",name:e,value:t});a.append(n)}),$("#dfesigninform").remove(),$("body").append(a),a.submit()}},0<$(".form-signin").length&&NSA.signin.init(),$(function(){$("table.sortable thead th").on("click",function(){var e=$("table.sortable thead tr th");e.removeClass("sorted").removeClass("dir-a").removeClass("dir-d");var t=sortTable(e.index($(this)));$(this).addClass("sorted dir-"+t)})});var toggleTips=$(".toggle-help");toggleTips.each(function(){var n,t,e,a;n=$(this),e=$("<span />").attr("class","toggletip"),a=$("<button />").attr("type","button").attr("aria-label","Help").attr("data-toggletip-content",n.html()).text("?").on("click",function(){var e=$(this).data("toggletip-content"),t=$(this).next();window.setTimeout(function(){t.html(function(){return $("<span />").attr("class",function(){return 50<n.html().length?"bubble long":"bubble"}).text(e)})},100)}).on("keydown",function(e){27===(e.keyCode||e.which)&&t.html("")}),t=$("<span />").attr("role","status"),e.append(a,t),n.before(e).remove(),$(document).on("click",function(e){n[0]!==$(e.target)&&t.html("")})});var forms=$("#content form");forms.attr("novalidate","novalidate");NSA=NSA||{};function select2ModelMatcher(e,t){if(t.parentText=t.parentText||"",""===$.trim(e.term))return t;if(t.children&&0<t.children.length){for(var n=$.extend(!0,{},t),a=t.children.length-1;0<=a;a--){var i=t.children[a];i.parentText+=t.parentText+" "+t.text,null==select2ModelMatcher(e,i)&&n.children.splice(a,1)}return 0<n.children.length?n:select2ModelMatcher(e,n)}var r=(t.parentText+" "+t.text).toUpperCase(),o=e.term.toUpperCase();return-1<r.indexOf(o)?t:null}NSA={showPassword:function(){$(".show-password").each(function(e){var t=$(this).find("input:password"),n=$("<label />").prop({for:"show-password-"+e}).html("Show"),a=$("<input />").prop({type:"checkbox",id:"show-password-"+e}).on("change",function(){var e=$(this);t.prop("type",function(){return e.prop("checked")?"text":"password"}),n.html(function(){return e.prop("checked")?"Hide":"Show"}),e.parent().removeClass("type-password"),e.prop("checked")&&e.parent().addClass("type-password")}),i=$("<div />").prop("class","show-password-control").append(a,n);t.after(i)})},backLink:function(){var e=$("<a>").attr({href:"#",class:"link-back"}).text("Back").on("click",function(e){window.history.back(),e.preventDefault()});$(".js-back-link").html(e)}},0<$("select.select2").length&&$("select.select2").select2({matcher:select2ModelMatcher}),0<$(".show-password").length&&NSA.showPassword(),$(".js-back-link")&&NSA.backLink(),$(".under-construction").on("click",function(e){alert("This functionality is not available yet"),e.preventDefault()}),0<$(".notification span.icon").length&&$(".notification span.icon").on("click",function(){$(this).parent().hide()}),0<$("article.organisation-services").length&&($(".information").on("click",function(e){var t=$(this).parent().parent().find(".service-description");e.preventDefault(),t.toggle()}),$(".info-link").on("click",function(e){var t=$(this).parent().next();e.preventDefault(),t.toggle()}));var searchFields=$("form .search-field");if(0<searchFields.length){var loader=$("<span />").addClass("loader spinner-inline"),b1=$("<span />").addClass("ball b-1"),b2=$("<span />").addClass("ball b-2");loader.append(b1).append(b2),searchFields.each(function(){var e=$(this).parent(),t=e.find("button");e.on("submit",function(){t.after(loader).hide()})})}var redirect=$("#redirect-url");$("#add-redirect").on("click",function(){return $('<p><label for="redirect-url"><input class="form-control inputConfig" name="redirect_uris"></label></p>').appendTo(redirect),!1});var logout=$("#logout-url");$("#add-logout").on("click",function(){return $('<p><label for="logout-url"><input class="form-control inputConfig" name="post_logout_redirect_uris"></label></p>').appendTo(logout),!1}),$("#generate-client-secret").on("click",function(){var e=window.niceware.generatePassphrase(8).join("-");return confirm("Are you sure you want to regenerate the client secret?")&&$("input#clientSecret").attr("value",e),!1}),$("#generate-api-secret").on("click",function(){var e=window.niceware.generatePassphrase(8).join("-");return confirm("Are you sure you want to regenerate the api secret?")&&$("input#apiSecret").attr("value",e),!1});var formRegister=$(".prevent-form-double-submission");0<formRegister.length&&formRegister.each(function(){var e=$(formRegister).find("button:submit"),t=e.eq(0);formRegister.on("submit",function(){e.attr("disabled","disabled"),t.css("min-width",t.outerWidth()+"px"),t.append("<span class='loader spinner-inline'> <span class='ball b-1'></span> <span class='ball b-2'></span> <span class='ball b-3'></span> </span>")})});var showHideContent=new GOVUK.ShowHideContent;showHideContent.init(),GOVUK.details.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9jb29raWVzLmpzIiwiX2RldGFpbHMucG9seWZpbGwuanMiLCJfZmlsdGVyLWJveGVzLmpzIiwiX2dhLWV2ZW50cy5qcyIsIl9zaWduaW4uanMiLCJfdGFibGVzb3J0LmpzIiwiX21vZGFsLmpzIiwiX3Nob3ctaGlkZS1jb250ZW50LmpzIiwiX3Rvb2x0aXAuanMiLCJfdmFsaWRhdGlvbi5qcyIsImFwcC5qcyJdLCJuYW1lcyI6WyJ3aW5kb3ciLCIkIiwiQ29va2llcyIsIm9uQ29va2llQWNjZXB0IiwiZXZlbnQiLCJuZXdQb2xpY3kiLCJhY2NlcHRlZFBvbGljeSIsImV4dGVuZCIsIkRFRkFVTFRfUE9MSUNZIiwiZWFjaCIsImtleSIsIkdvdlVLQ29va2llIiwiQ09PS0lFX05BTUVTIiwidGFyZ2V0IiwiJGNvb2tpZUFjY2VwdEJ1dHRvbiIsIiRjb29raWVCYW5uZXIiLCJzbGlkZVVwIiwiZXNzZW50aWFsIiwic2V0dGluZ3MiLCJ1c2FnZSIsIm5hbWUiLCJ2YWx1ZSIsImdldCIsIkpTT04iLCJwYXJzZSIsImN1cnJlbnRQb2xpY3kiLCJndGFnIiwiZ2FUcmFja2luZ0lkIiwiZ3RhZ0Nvb2tpZU5hbWUiLCJyZXBsYWNlIiwiRGF0ZSIsImNvb2tpZV9mbGFncyIsInJlbW92ZSIsInNldEdvb2dsZUFuYWx5dGljc1N0YXR1cyIsInNldCIsImV4cGlyZXMiLCJzZWN1cmUiLCJmaW5kIiwiY2xpY2siLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwic2xpZGVEb3duIiwic2hvdyIsIiRwcmVmZXJlbmNlc0Zvcm0iLCJsZW5ndGgiLCJvbiIsInByZXZlbnREZWZhdWx0IiwidmFsIiwiaGlzdG9yeSIsImJhY2siLCJnbG9iYWwiLCJHT1ZVSyIsImRldGFpbHMiLCJOQVRJVkVfREVUQUlMUyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsIm9wZW4iLCJLRVlfRU5URVIiLCJLRVlfU1BBQ0UiLCJzdGFydGVkIiwiYWRkRXZlbnQiLCJub2RlIiwidHlwZSIsImNhbGxiYWNrIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJhdHRhY2hFdmVudCIsInNyY0VsZW1lbnQiLCJyZW1vdmVFdmVudCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkZXRhY2hFdmVudCIsImNoYXJDb2RlIiwid2hpY2giLCJrZXlDb2RlIiwicmV0dXJuVmFsdWUiLCJhZGRDbGlja0V2ZW50Iiwibm9kZU5hbWUiLCJ0b0xvd2VyQ2FzZSIsImdldEFuY2VzdG9yIiwibWF0Y2giLCJwYXJlbnROb2RlIiwiYWRkRGV0YWlsc1BvbHlmaWxsIiwibGlzdCIsImNvbnRhaW5lciIsImJvZHkiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsIm4iLCJpIiwiX19zdW1tYXJ5IiwiaXRlbSIsIl9fY29udGVudCIsImlkIiwic2V0QXR0cmlidXRlIiwidGFiSW5kZXgiLCJvcGVuQXR0ciIsImdldEF0dHJpYnV0ZSIsInN0eWxlIiwiZGlzcGxheSIsIl9fZGV0YWlscyIsInR3aXN0eSIsImNsYXNzTmFtZSIsImFwcGVuZENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3R3aXN0eSIsImluc2VydEJlZm9yZSIsImZpcnN0Q2hpbGQiLCJzdW1tYXJ5Iiwic3RhdGVjaGFuZ2UiLCJleHBhbmRlZCIsImhpZGRlbiIsInJlbW92ZUF0dHJpYnV0ZSIsIm5vZGVWYWx1ZSIsImRlc3Ryb3kiLCJpbml0IiwiJGNvbnRhaW5lciIsIk5TQSIsImZpbHRlckJveGVzIiwiZmlsdGVycyIsIiR0aGF0IiwidGhpcyIsImhlYWRlciIsInRpdGxlIiwiY2hlY2tib3hlcyIsImJ1dHRvbiIsImFkZENsYXNzIiwiY2hlY2tDb3VudCIsIm9wdGlvbnMiLCJuZXh0IiwiaGFzQ2xhc3MiLCJyZW1vdmVDbGFzcyIsImF0dHIiLCJoaWRlIiwiYXBwZW5kIiwicmVwbGFjZVdpdGgiLCJ0ZXh0IiwiZmlsdGVyIiwiZ2FFdmVudCIsImNhdGVnb3J5IiwiZGF0YSIsImxhYmVsIiwiZXZlbnRfY2F0ZWdvcnkiLCJldmVudF9sYWJlbCIsImdldFBhcmFtZXRlckJ5TmFtZSIsInVybCIsImhyZWYiLCJyZXN1bHRzIiwiUmVnRXhwIiwiZXhlYyIsImRlY29kZVVSSUNvbXBvbmVudCIsInNvcnRUYWJsZSIsInRhYmxlIiwicm93cyIsInN3aXRjaGluZyIsIngiLCJ5Iiwic2hvdWxkU3dpdGNoIiwiZGlyZWN0aW9uIiwic3dpdGNoY291bnQiLCJpbm5lckhUTUwiLCJtb2RhbCIsImVsZW1zIiwibGlua3MiLCJtb2RhbHMiLCJtb2RhbEJnIiwic2V0VXBFdmVudHMiLCJ0aGF0IiwiYmciLCJoaWRlTW9kYWxzIiwic2hvd01vZGFsIiwialF1ZXJ5IiwiU2hvd0hpZGVDb250ZW50Iiwic2VsZWN0b3JzIiwiaW5pdFRvZ2dsZWRDb250ZW50IiwiJGNvbnRyb2wiLCIkY29udGVudCIsImdldFRvZ2dsZWRDb250ZW50IiwiY2xvc2VzdCIsInNob3dUb2dnbGVkQ29udGVudCIsImhpZGVUb2dnbGVkQ29udGVudCIsImhhbmRsZVJhZGlvQ29udGVudCIsInNlbGVjdG9yIiwiJGZvcm0iLCJpcyIsImhhbmRsZUNoZWNrYm94Q29udGVudCIsImhhbmRsZUxpbmtDb250ZW50IiwiJGV2ZW50IiwiZWxlbWVudFNlbGVjdG9yIiwiZXZlbnRTZWxlY3RvcnMiLCJoYW5kbGVyIiwiZGVmZXJyZWQiLCIkY29udHJvbHMiLCJpZHgiLCJldmVudFNlbGVjdG9yIiwic2hvd0hpZGVSYWRpb1RvZ2dsZWRDb250ZW50IiwicmFkaW9Hcm91cHMiLCJtYXAiLCJncm91cE5hbWUiLCJpbkFycmF5IiwicHVzaCIsInNob3dIaWRlQ2hlY2tib3hUb2dnbGVkQ29udGVudCIsInNob3dIaWRlTGlua1RvZ2dsZWRDb250ZW50Iiwib2ZmIiwicHJvdG90eXBlIiwic2lnbmluIiwiZm9ybSIsInNldHVwRXZlbnRzIiwiaGFuZGxlU3VibWl0IiwiJGlucHV0cyIsIm5vdCIsInBvc3REYXRhIiwiJHN1Ym1pdEJ1dHRvbnMiLCIkc3VibWl0QnV0dG9uIiwiZXEiLCJjc3MiLCJvdXRlcldpZHRoIiwicHJvcCIsImFqYXgiLCJjb250ZXh0IiwiZGF0YVR5cGUiLCJzdWNjZXNzIiwicmVkaXJlY3QiLCJ1cmkiLCJpc0ZhaWxlZExvZ2luIiwicmVzZXRWYWxpZGF0aW9uIiwic2hvd1ZhbGlkYXRpb25NZXNzYWdlIiwidmFsaWRhdGlvbk1lc3NhZ2VzIiwic2hvd0lubGluZVZhbGlkYXRpb24iLCJyZW1vdmVBdHRyIiwiYnVpbGRGb3JtQW5kU3VibWl0IiwiZXJyb3IiLCIkZm9ybUdyb3VwcyIsIiRmaWVsZCIsIm1lc3NhZ2VzIiwiJGRpdiIsIiRoMiIsIiR1bCIsImluZGV4IiwiJGEiLCIkbGkiLCJodG1sIiwicHJlcGVuZCIsImFuaW1hdGUiLCJzY3JvbGxUb3AiLCJvZmZzZXQiLCJ0b3AiLCIkcGFyZW50IiwicGFyZW50IiwiJGxhYmVsIiwiZmlyc3QiLCJlcnJvck1lc3NhZ2UiLCJhZnRlciIsImFyaWEtZGVzY3JpYmVkYnkiLCJhcmlhLWludmFsaWQiLCJtZXRob2QiLCJhY3Rpb24iLCJkZXN0aW5hdGlvbiIsInBvc3RiYWNrRGF0YSIsInN1Ym1pdCIsImhlYWRpbmdDZWxscyIsInRvZ2dsZVRpcHMiLCJsaXZlUmVnaW9uIiwidG9nZ2xlVGlwIiwibWVzc2FnZSIsInNldFRpbWVvdXQiLCJiZWZvcmUiLCJmb3JtcyIsInNlbGVjdDJNb2RlbE1hdGNoZXIiLCJwYXJhbXMiLCJwYXJlbnRUZXh0IiwidHJpbSIsInRlcm0iLCJjaGlsZHJlbiIsImMiLCJjaGlsZCIsInNwbGljZSIsIm9yaWdpbmFsIiwidG9VcHBlckNhc2UiLCJpbmRleE9mIiwic2hvd1Bhc3N3b3JkIiwiJHB3ZEZsZCIsIiRjaGVja0xibCIsImZvciIsIiRjaGVja0JveCIsIiRjYldyYXAiLCJiYWNrTGluayIsImNsYXNzIiwic2VsZWN0MiIsIm1hdGNoZXIiLCJhbGVydCIsImluZm8iLCJ0b2dnbGUiLCJtZXRhIiwic2VhcmNoRmllbGRzIiwibG9hZGVyIiwiYjEiLCJiMiIsImFwcGVuZFRvIiwibG9nb3V0Iiwic2VjcmV0IiwibmljZXdhcmUiLCJnZW5lcmF0ZVBhc3NwaHJhc2UiLCJqb2luIiwiY29uZmlybSIsImZvcm1SZWdpc3RlciIsInNob3dIaWRlQ29udGVudCJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBQUEsR0FDQSxJQUFBQyxFQUFBRCxFQUFBQyxFQUNBQyxFQUFBRixFQUFBRSxRQUNBLEdBQUFBLEdBQUFELEVBQUEsQ0EyRUEsU0FBQUUsRUFBQUMsRUFBQUMsR0FDQSxJQVZBQyxFQVVBQSxFQUFBRCxJQVZBQyxFQUFBTCxFQUFBTSxPQUFBQyxFQUFBLElBRUFQLEVBQUFRLEtBQUFILEVBQUEsU0FBQUksR0FDQUosRUFBQUksSUFBQSxJQUdBSixHQU1BSyxFQUNBQyxFQUNBTixHQUdBSyxFQUNBQyxHQUNBLEdBR0FSLEVBQUFTLFNBQUFDLEVBQUEsSUFDQUMsRUFBQUMsVUFyRkEsSUFBQUosRUFDQSwwQkFEQUEsRUFFQSxpQkFHQUosRUFBQSxDQUNBUyxXQUFBLEVBQ0FDLFVBQUEsRUFDQUMsT0FBQSxHQXVCQVIsRUFDQSxTQUFBUyxHQUNBLElBQUFDLEVBQUFuQixFQUFBb0IsSUFBQUYsR0FDQSxPQUFBQyxFQUNBRSxLQUFBQyxNQUFBSCxHQUVBQSxHQU5BVixFQVFBLFNBQUFTLEVBQUFDLEdBV0EsT0FKQUQsSUFBQVIsR0FuQ0EsU0FBQWEsR0FDQSxHQUFBekIsRUFBQTBCLE1BQUExQixFQUFBMkIsYUFBQSxDQUdBLElBQUFDLEVBRUEsYUFEQTVCLEVBQUEyQixhQUFBRSxRQUFBLEtBQUEsS0FHQUosRUFBQU4sT0FDQW5CLEVBQUEwQixLQUFBLEtBQUEsSUFBQUksTUFDQTlCLEVBQUEwQixLQUFBLFNBQUExQixFQUFBMkIsYUFBQSxDQUFBSSxhQUFBLGFBRUEvQixFQUFBLGNBQUFBLEVBQUEyQixlQUFBLEVBQ0F6QixFQUFBOEIsT0FBQSxPQUNBOUIsRUFBQThCLE9BQUEsUUFDQTlCLEVBQUE4QixPQUFBSixLQXFCQUssQ0FBQVosR0FHQW5CLEVBQUFnQyxJQUNBZCxFQUNBQyxFQVpBLENBQ0FjLFFBQUEsSUFDQUMsUUFBQSxLQWdCQXJC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Iiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICh3aW5kb3cpIHtcbiAgdmFyICQgPSB3aW5kb3cuJDtcbiAgdmFyIENvb2tpZXMgPSB3aW5kb3cuQ29va2llcztcbiAgaWYgKCFDb29raWVzIHx8ICEkKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIENPT0tJRV9OQU1FUyA9IHtcbiAgICBQUkVGRVJFTkNFU19TRVQ6ICdjb29raWVzX3ByZWZlcmVuY2VzX3NldCcsXG4gICAgUE9MSUNZOiAnY29va2llc19wb2xpY3knXG4gIH07XG4gIFxuICB2YXIgREVGQVVMVF9QT0xJQ1kgPSB7XG4gICAgZXNzZW50aWFsOiB0cnVlLFxuICAgIHNldHRpbmdzOiBmYWxzZSxcbiAgICB1c2FnZTogdHJ1ZVxuICB9O1xuXG4gIGZ1bmN0aW9uIHNldEdvb2dsZUFuYWx5dGljc1N0YXR1cyAoY3VycmVudFBvbGljeSkge1xuICAgIGlmICghd2luZG93Lmd0YWcgfHwgIXdpbmRvdy5nYVRyYWNraW5nSWQpIHtcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICB2YXIgZ3RhZ0Nvb2tpZU5hbWUgPSAoZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHByb3BlcnR5SWQgPSB3aW5kb3cuZ2FUcmFja2luZ0lkLnJlcGxhY2UoLy0vZywgJ18nKTtcbiAgICAgIHJldHVybiAnX2dhdF9ndGFnXycgKyBwcm9wZXJ0eUlkOyBcbiAgICB9KSgpO1xuICAgIGlmIChjdXJyZW50UG9saWN5LnVzYWdlKSB7XG4gICAgICB3aW5kb3cuZ3RhZygnanMnLCBuZXcgRGF0ZSgpKTtcbiAgICAgIHdpbmRvdy5ndGFnKCdjb25maWcnLCB3aW5kb3cuZ2FUcmFja2luZ0lkLCB7IGNvb2tpZV9mbGFnczogJ3NlY3VyZSd9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgd2luZG93WydnYS1kaXNhYmxlLScgKyB3aW5kb3cuZ2FUcmFja2luZ0lkXSA9IHRydWU7XG4gICAgICBDb29raWVzLnJlbW92ZSgnX2dhJyk7XG4gICAgICBDb29raWVzLnJlbW92ZSgnX2dpZCcpO1xuICAgICAgQ29va2llcy5yZW1vdmUoZ3RhZ0Nvb2tpZU5hbWUpO1xuICAgICAgXG4gICAgfVxuICB9XG5cbiAgdmFyIEdvdlVLQ29va2llID0ge1xuICAgIGdldDogZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgIHZhciB2YWx1ZSA9IENvb2tpZXMuZ2V0KG5hbWUpO1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gKG5hbWUsIHZhbHVlKSB7XG4gICAgICB2YXIgR09WVUtfQ09PS0lFX09QVElPTlMgPSB7XG4gICAgICAgIGV4cGlyZXM6IDM2NSwgLy8gZGF5c1xuICAgICAgICBzZWN1cmU6IHRydWUsXG4gICAgICAgIC8vIGRvbWFpbjogJy5lZHVjYXRpb24uZ292LnVrJ1xuICAgICAgfTtcbiAgICAgIFxuICAgICAgaWYgKG5hbWUgPT09IENPT0tJRV9OQU1FUy5QT0xJQ1kpIHtcbiAgICAgICAgc2V0R29vZ2xlQW5hbHl0aWNzU3RhdHVzKHZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvb2tpZXMuc2V0KFxuICAgICAgICBuYW1lLFxuICAgICAgICB2YWx1ZSxcbiAgICAgICAgR09WVUtfQ09PS0lFX09QVElPTlNcbiAgICAgICk7XG4gICAgfVxuICB9O1xuXG4gIHZhciAkY29va2llQmFubmVyID0gJCgnI2RzaS1jb29raWUtYmFubmVyLmdsb2JhbC1jb29raWUtbWVzc2FnZS1kZmUtc2lnbi1pbicpO1xuICB2YXIgJGNvb2tpZUFjY2VwdEJ1dHRvbiA9ICRjb29raWVCYW5uZXIuZmluZCgnYnV0dG9uLmNvb2tpZS1hY2NlcHQnKTtcblxuICB2YXIgZ2V0QWNjZXB0ZWRBbGxQb2xpY3kgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGFjY2VwdGVkUG9saWN5ID0gJC5leHRlbmQoREVGQVVMVF9QT0xJQ1ksIHt9KTsgLy8gZGVlcCBjb3B5XG5cbiAgICAkLmVhY2goYWNjZXB0ZWRQb2xpY3ksIGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGFjY2VwdGVkUG9saWN5W2tleV0gPSB0cnVlO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGFjY2VwdGVkUG9saWN5O1xuICB9O1xuXG4gIHZhciBvbkNvb2tpZUFjY2VwdCA9IGZ1bmN0aW9uIChldmVudCwgbmV3UG9saWN5KSB7XG4gICAgdmFyIGFjY2VwdGVkUG9saWN5ID0gbmV3UG9saWN5IHx8IGdldEFjY2VwdGVkQWxsUG9saWN5KCk7XG5cbiAgICBHb3ZVS0Nvb2tpZS5zZXQoXG4gICAgICBDT09LSUVfTkFNRVMuUE9MSUNZLFxuICAgICAgYWNjZXB0ZWRQb2xpY3lcbiAgICApO1xuXG4gICAgR292VUtDb29raWUuc2V0KFxuICAgICAgQ09PS0lFX05BTUVTLlBSRUZFUkVOQ0VTX1NFVCxcbiAgICAgIHRydWVcbiAgICApO1xuXG4gICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gJGNvb2tpZUFjY2VwdEJ1dHRvblswXSkge1xuICAgICAgJGNvb2tpZUJhbm5lci5zbGlkZVVwKCk7XG4gICAgfVxuICB9O1xuXG4gIGlmICghR292VUtDb29raWUuZ2V0KENPT0tJRV9OQU1FUy5QUkVGRVJFTkNFU19TRVQpKSB7XG4gICAgR292VUtDb29raWUuc2V0KFxuICAgICAgQ09PS0lFX05BTUVTLlBPTElDWSxcbiAgICAgIERFRkFVTFRfUE9MSUNZXG4gICAgKTtcbiAgICAkY29va2llQWNjZXB0QnV0dG9uLmNsaWNrKG9uQ29va2llQWNjZXB0KTtcbiAgICBpZiAod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICE9PSAnL2Nvb2tpZXMnKSB7XG4gICAgICAkY29va2llQmFubmVyLnNsaWRlRG93bigpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkY29va2llQmFubmVyLnNob3coKTtcbiAgICB9XG4gIH1cbiAgXG4gIHZhciAkcHJlZmVyZW5jZXNGb3JtID0gJCgnI2RzaS1jb29raWUtZm9ybS5jb29raWVzLXBhZ2UtZGZlLXNpZ24taW5fX3ByZWZlcmVuY2VzLWZvcm0nKTtcblxuICAkcHJlZmVyZW5jZXNGb3JtLmxlbmd0aCAmJiAkcHJlZmVyZW5jZXNGb3JtLm9uKCdzdWJtaXQnLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHZhciBuZXdQb2xpY3kgPSB7XG4gICAgICBzZXR0aW5nczogISEkcHJlZmVyZW5jZXNGb3JtLmZpbmQoXCJpbnB1dFtuYW1lPSdjb29raWUuc2V0dGluZ3MnXTpjaGVja2VkXCIpLnZhbCgpLFxuICAgICAgdXNhZ2U6ICEhJHByZWZlcmVuY2VzRm9ybS5maW5kKFwiaW5wdXRbbmFtZT0nY29va2llLnVzYWdlJ106Y2hlY2tlZFwiKS52YWwoKVxuICAgIH1cblxuICAgIHZhciBhY2NlcHRlZFBvbGljeSA9ICQuZXh0ZW5kKERFRkFVTFRfUE9MSUNZLCBuZXdQb2xpY3kpO1xuICAgIG9uQ29va2llQWNjZXB0KGV2ZW50LCBhY2NlcHRlZFBvbGljeSk7XG5cbiAgICBpZiAod2luZG93Lmhpc3RvcnkpIHtcbiAgICAgIHdpbmRvdy5oaXN0b3J5LmJhY2soKTtcbiAgICB9IGVsc2Uge1xuICAgICAgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lID0gJy8nO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0pO1xuXG59KSh3aW5kb3cpOyIsIi8vIDxkZXRhaWxzPiBwb2x5ZmlsbFxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNmZWF0PWRldGFpbHNcblxuLy8gRkYgU3VwcG9ydCBmb3IgSFRNTDUncyA8ZGV0YWlscz4gYW5kIDxzdW1tYXJ5PlxuLy8gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NTkxNzM3XG5cbi8vIGh0dHA6Ly93d3cuc2l0ZXBvaW50LmNvbS9maXhpbmctdGhlLWRldGFpbHMtZWxlbWVudC9cblxuOyhmdW5jdGlvbiAoZ2xvYmFsKSB7XG4gICd1c2Ugc3RyaWN0J1xuXG4gIHZhciBHT1ZVSyA9IGdsb2JhbC5HT1ZVSyB8fCB7fVxuXG4gIEdPVlVLLmRldGFpbHMgPSB7XG4gICAgTkFUSVZFX0RFVEFJTFM6IHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkZXRhaWxzJykub3BlbiA9PT0gJ2Jvb2xlYW4nLFxuICAgIEtFWV9FTlRFUjogMTMsXG4gICAgS0VZX1NQQUNFOiAzMixcblxuICAgIC8vIENyZWF0ZSBhIHN0YXJ0ZWQgZmxhZyBzbyB3ZSBjYW4gcHJldmVudCB0aGUgaW5pdGlhbGlzYXRpb25cbiAgICAvLyBmdW5jdGlvbiBmaXJpbmcgZnJvbSBib3RoIERPTUNvbnRlbnRMb2FkZWQgYW5kIHdpbmRvdy5vbmxvYWRcbiAgICBzdGFydGVkOiBmYWxzZSxcblxuICAgIC8vIEFkZCBldmVudCBjb25zdHJ1Y3QgZm9yIG1vZGVybiBicm93c2VycyBvciBJRVxuICAgIC8vIHdoaWNoIGZpcmVzIHRoZSBjYWxsYmFjayB3aXRoIGEgcHJlLWNvbnZlcnRlZCB0YXJnZXQgcmVmZXJlbmNlXG4gICAgYWRkRXZlbnQ6IGZ1bmN0aW9uIChub2RlLCB0eXBlLCBjYWxsYmFjaykge1xuICAgICAgaWYgKG5vZGUuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICBjYWxsYmFjayhlLCBlLnRhcmdldClcbiAgICAgICAgfSwgZmFsc2UpXG4gICAgICB9IGVsc2UgaWYgKG5vZGUuYXR0YWNoRXZlbnQpIHtcbiAgICAgICAgbm9kZS5hdHRhY2hFdmVudCgnb24nICsgdHlwZSwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICBjYWxsYmFjayhlLCBlLnNyY0VsZW1lbnQpXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSxcblxuICAgIHJlbW92ZUV2ZW50OiBmdW5jdGlvbiAobm9kZSwgdHlwZSkge1xuICAgICAgaWYgKG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgfSwgZmFsc2UpXG4gICAgICB9IGVsc2UgaWYgKG5vZGUuZGV0YWNoRXZlbnQpIHtcbiAgICAgICAgbm9kZS5kZXRhY2hFdmVudCgnb24nICsgdHlwZSwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8gQ3Jvc3MtYnJvd3NlciBjaGFyYWN0ZXIgY29kZSAvIGtleSBwcmVzc2VkXG4gICAgY2hhckNvZGU6IGZ1bmN0aW9uIChlKSB7XG4gICAgICByZXR1cm4gKHR5cGVvZiBlLndoaWNoID09PSAnbnVtYmVyJykgPyBlLndoaWNoIDogZS5rZXlDb2RlXG4gICAgfSxcblxuICAgIC8vIENyb3NzLWJyb3dzZXIgcHJldmVudGluZyBkZWZhdWx0IGFjdGlvblxuICAgIHByZXZlbnREZWZhdWx0OiBmdW5jdGlvbiAoZSkge1xuICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlLnJldHVyblZhbHVlID0gZmFsc2VcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8gSGFuZGxlIGNyb3NzLW1vZGFsIGNsaWNrIGV2ZW50c1xuICAgIGFkZENsaWNrRXZlbnQ6IGZ1bmN0aW9uIChub2RlLCBjYWxsYmFjaykge1xuICAgICAgR09WVUsuZGV0YWlscy5hZGRFdmVudChub2RlLCAna2V5cHJlc3MnLCBmdW5jdGlvbiAoZSwgdGFyZ2V0KSB7XG4gICAgICAgIC8vIFdoZW4gdGhlIGtleSBnZXRzIHByZXNzZWQgLSBjaGVjayBpZiBpdCBpcyBlbnRlciBvciBzcGFjZVxuICAgICAgICBpZiAoR09WVUsuZGV0YWlscy5jaGFyQ29kZShlKSA9PT0gR09WVUsuZGV0YWlscy5LRVlfRU5URVIgfHwgR09WVUsuZGV0YWlscy5jaGFyQ29kZShlKSA9PT0gR09WVUsuZGV0YWlscy5LRVlfU1BBQ0UpIHtcbiAgICAgICAgICBpZiAodGFyZ2V0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdzdW1tYXJ5Jykge1xuICAgICAgICAgICAgLy8gUHJldmVudCBzcGFjZSBmcm9tIHNjcm9sbGluZyB0aGUgcGFnZVxuICAgICAgICAgICAgLy8gYW5kIGVudGVyIGZyb20gc3VibWl0dGluZyBhIGZvcm1cbiAgICAgICAgICAgIEdPVlVLLmRldGFpbHMucHJldmVudERlZmF1bHQoZSlcbiAgICAgICAgICAgIC8vIENsaWNrIHRvIGxldCB0aGUgY2xpY2sgZXZlbnQgZG8gYWxsIHRoZSBuZWNlc3NhcnkgYWN0aW9uXG4gICAgICAgICAgICBpZiAodGFyZ2V0LmNsaWNrKSB7XG4gICAgICAgICAgICAgIHRhcmdldC5jbGljaygpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAvLyBleGNlcHQgU2FmYXJpIDUuMSBhbmQgdW5kZXIgZG9uJ3Qgc3VwcG9ydCAuY2xpY2soKSBoZXJlXG4gICAgICAgICAgICAgIGNhbGxiYWNrKGUsIHRhcmdldClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICAgIC8vIFByZXZlbnQga2V5dXAgdG8gcHJldmVudCBjbGlja2luZyB0d2ljZSBpbiBGaXJlZm94IHdoZW4gdXNpbmcgc3BhY2Uga2V5XG4gICAgICBHT1ZVSy5kZXRhaWxzLmFkZEV2ZW50KG5vZGUsICdrZXl1cCcsIGZ1bmN0aW9uIChlLCB0YXJnZXQpIHtcbiAgICAgICAgaWYgKEdPVlVLLmRldGFpbHMuY2hhckNvZGUoZSkgPT09IEdPVlVLLmRldGFpbHMuS0VZX1NQQUNFKSB7XG4gICAgICAgICAgaWYgKHRhcmdldC5ub2RlTmFtZSA9PT0gJ1NVTU1BUlknKSB7XG4gICAgICAgICAgICBHT1ZVSy5kZXRhaWxzLnByZXZlbnREZWZhdWx0KGUpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICBHT1ZVSy5kZXRhaWxzLmFkZEV2ZW50KG5vZGUsICdjbGljaycsIGZ1bmN0aW9uIChlLCB0YXJnZXQpIHtcbiAgICAgICAgY2FsbGJhY2soZSwgdGFyZ2V0KVxuICAgICAgfSlcbiAgICB9LFxuXG4gICAgLy8gR2V0IHRoZSBuZWFyZXN0IGFuY2VzdG9yIGVsZW1lbnQgb2YgYSBub2RlIHRoYXQgbWF0Y2hlcyBhIGdpdmVuIHRhZyBuYW1lXG4gICAgZ2V0QW5jZXN0b3I6IGZ1bmN0aW9uIChub2RlLCBtYXRjaCkge1xuICAgICAgZG8ge1xuICAgICAgICBpZiAoIW5vZGUgfHwgbm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBtYXRjaCkge1xuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZVxuICAgICAgfSB3aGlsZSAobm9kZSlcblxuICAgICAgcmV0dXJuIG5vZGVcbiAgICB9LFxuXG4gICAgLy8gSW5pdGlhbGlzYXRpb24gZnVuY3Rpb25cbiAgICBhZGREZXRhaWxzUG9seWZpbGw6IGZ1bmN0aW9uIChsaXN0LCBjb250YWluZXIpIHtcbiAgICAgIGNvbnRhaW5lciA9IGNvbnRhaW5lciB8fCBkb2N1bWVudC5ib2R5XG4gICAgICAvLyBJZiB0aGlzIGhhcyBhbHJlYWR5IGhhcHBlbmVkLCBqdXN0IHJldHVyblxuICAgICAgLy8gZWxzZSBzZXQgdGhlIGZsYWcgc28gaXQgZG9lc24ndCBoYXBwZW4gYWdhaW5cbiAgICAgIGlmIChHT1ZVSy5kZXRhaWxzLnN0YXJ0ZWQpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICBHT1ZVSy5kZXRhaWxzLnN0YXJ0ZWQgPSB0cnVlXG4gICAgICAvLyBHZXQgdGhlIGNvbGxlY3Rpb24gb2YgZGV0YWlscyBlbGVtZW50cywgYnV0IGlmIHRoYXQncyBlbXB0eVxuICAgICAgLy8gdGhlbiB3ZSBkb24ndCBuZWVkIHRvIGJvdGhlciB3aXRoIHRoZSByZXN0IG9mIHRoZSBzY3JpcHRpbmdcbiAgICAgIGlmICgobGlzdCA9IGNvbnRhaW5lci5nZXRFbGVtZW50c0J5VGFnTmFtZSgnZGV0YWlscycpKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICAvLyBlbHNlIGl0ZXJhdGUgdGhyb3VnaCB0aGVtIHRvIGFwcGx5IHRoZWlyIGluaXRpYWwgc3RhdGVcbiAgICAgIHZhciBuID0gbGlzdC5sZW5ndGhcbiAgICAgIHZhciBpID0gMFxuICAgICAgZm9yIChpOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIHZhciBkZXRhaWxzID0gbGlzdFtpXVxuXG4gICAgICAgIC8vIFNhdmUgc2hvcnRjdXRzIHRvIHRoZSBpbm5lciBzdW1tYXJ5IGFuZCBjb250ZW50IGVsZW1lbnRzXG4gICAgICAgIGRldGFpbHMuX19zdW1tYXJ5ID0gZGV0YWlscy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc3VtbWFyeScpLml0ZW0oMClcbiAgICAgICAgZGV0YWlscy5fX2NvbnRlbnQgPSBkZXRhaWxzLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdkaXYnKS5pdGVtKDApXG5cbiAgICAgICAgaWYgKCFkZXRhaWxzLl9fc3VtbWFyeSB8fCAhZGV0YWlscy5fX2NvbnRlbnQpIHtcbiAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB0aGUgY29udGVudCBkb2Vzbid0IGhhdmUgYW4gSUQsIGFzc2lnbiBpdCBvbmUgbm93XG4gICAgICAgIC8vIHdoaWNoIHdlJ2xsIG5lZWQgZm9yIHRoZSBzdW1tYXJ5J3MgYXJpYS1jb250cm9scyBhc3NpZ25tZW50XG4gICAgICAgIGlmICghZGV0YWlscy5fX2NvbnRlbnQuaWQpIHtcbiAgICAgICAgICBkZXRhaWxzLl9fY29udGVudC5pZCA9ICdkZXRhaWxzLWNvbnRlbnQtJyArIGlcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEFkZCBBUklBIHJvbGU9XCJncm91cFwiIHRvIGRldGFpbHNcbiAgICAgICAgZGV0YWlscy5zZXRBdHRyaWJ1dGUoJ3JvbGUnLCAnZ3JvdXAnKVxuXG4gICAgICAgIC8vIEFkZCByb2xlPWJ1dHRvbiB0byBzdW1tYXJ5XG4gICAgICAgIGRldGFpbHMuX19zdW1tYXJ5LnNldEF0dHJpYnV0ZSgncm9sZScsICdidXR0b24nKVxuXG4gICAgICAgIC8vIEFkZCBhcmlhLWNvbnRyb2xzXG4gICAgICAgIGRldGFpbHMuX19zdW1tYXJ5LnNldEF0dHJpYnV0ZSgnYXJpYS1jb250cm9scycsIGRldGFpbHMuX19jb250ZW50LmlkKVxuXG4gICAgICAgIC8vIFNldCB0YWJJbmRleCBzbyB0aGUgc3VtbWFyeSBpcyBrZXlib2FyZCBhY2Nlc3NpYmxlIGZvciBub24tbmF0aXZlIGVsZW1lbnRzXG4gICAgICAgIC8vIGh0dHA6Ly93d3cuc2FsaWVuY2VzLmNvbS9icm93c2VyQnVncy90YWJJbmRleC5odG1sXG4gICAgICAgIGlmICghR09WVUsuZGV0YWlscy5OQVRJVkVfREVUQUlMUykge1xuICAgICAgICAgIGRldGFpbHMuX19zdW1tYXJ5LnRhYkluZGV4ID0gMFxuICAgICAgICB9XG5cbiAgICAgICAgLy8gRGV0ZWN0IGluaXRpYWwgb3BlbiBzdGF0ZVxuICAgICAgICB2YXIgb3BlbkF0dHIgPSBkZXRhaWxzLmdldEF0dHJpYnV0ZSgnb3BlbicpICE9PSBudWxsXG4gICAgICAgIGlmIChvcGVuQXR0ciA9PT0gdHJ1ZSkge1xuICAgICAgICAgIGRldGFpbHMuX19zdW1tYXJ5LnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsICd0cnVlJylcbiAgICAgICAgICBkZXRhaWxzLl9fY29udGVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgJ2ZhbHNlJylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZXRhaWxzLl9fc3VtbWFyeS5zZXRBdHRyaWJ1dGUoJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnKVxuICAgICAgICAgIGRldGFpbHMuX19jb250ZW50LnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAndHJ1ZScpXG4gICAgICAgICAgaWYgKCFHT1ZVSy5kZXRhaWxzLk5BVElWRV9ERVRBSUxTKSB7XG4gICAgICAgICAgICBkZXRhaWxzLl9fY29udGVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ3JlYXRlIGEgY2lyY3VsYXIgcmVmZXJlbmNlIGZyb20gdGhlIHN1bW1hcnkgYmFjayB0byBpdHNcbiAgICAgICAgLy8gcGFyZW50IGRldGFpbHMgZWxlbWVudCwgZm9yIGNvbnZlbmllbmNlIGluIHRoZSBjbGljayBoYW5kbGVyXG4gICAgICAgIGRldGFpbHMuX19zdW1tYXJ5Ll9fZGV0YWlscyA9IGRldGFpbHNcblxuICAgICAgICAvLyBJZiB0aGlzIGlzIG5vdCBhIG5hdGl2ZSBpbXBsZW1lbnRhdGlvbiwgY3JlYXRlIGFuIGFycm93XG4gICAgICAgIC8vIGluc2lkZSB0aGUgc3VtbWFyeVxuICAgICAgICBpZiAoIUdPVlVLLmRldGFpbHMuTkFUSVZFX0RFVEFJTFMpIHtcbiAgICAgICAgICB2YXIgdHdpc3R5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaScpXG5cbiAgICAgICAgICBpZiAob3BlbkF0dHIgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHR3aXN0eS5jbGFzc05hbWUgPSAnYXJyb3cgYXJyb3ctb3BlbidcbiAgICAgICAgICAgIHR3aXN0eS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnXFx1MjViYycpKVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0d2lzdHkuY2xhc3NOYW1lID0gJ2Fycm93IGFycm93LWNsb3NlZCdcbiAgICAgICAgICAgIHR3aXN0eS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnXFx1MjViYScpKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGRldGFpbHMuX19zdW1tYXJ5Ll9fdHdpc3R5ID0gZGV0YWlscy5fX3N1bW1hcnkuaW5zZXJ0QmVmb3JlKHR3aXN0eSwgZGV0YWlscy5fX3N1bW1hcnkuZmlyc3RDaGlsZClcbiAgICAgICAgICBkZXRhaWxzLl9fc3VtbWFyeS5fX3R3aXN0eS5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgJ3RydWUnKVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIEJpbmQgYSBjbGljayBldmVudCB0byBoYW5kbGUgc3VtbWFyeSBlbGVtZW50c1xuICAgICAgR09WVUsuZGV0YWlscy5hZGRDbGlja0V2ZW50KGNvbnRhaW5lciwgZnVuY3Rpb24gKGUsIHN1bW1hcnkpIHtcbiAgICAgICAgaWYgKCEoc3VtbWFyeSA9IEdPVlVLLmRldGFpbHMuZ2V0QW5jZXN0b3Ioc3VtbWFyeSwgJ3N1bW1hcnknKSkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBHT1ZVSy5kZXRhaWxzLnN0YXRlY2hhbmdlKHN1bW1hcnkpXG4gICAgICB9KVxuICAgIH0sXG5cbiAgICAvLyBEZWZpbmUgYSBzdGF0ZWNoYW5nZSBmdW5jdGlvbiB0aGF0IHVwZGF0ZXMgYXJpYS1leHBhbmRlZCBhbmQgc3R5bGUuZGlzcGxheVxuICAgIC8vIEFsc28gdXBkYXRlIHRoZSBhcnJvdyBwb3NpdGlvblxuICAgIHN0YXRlY2hhbmdlOiBmdW5jdGlvbiAoc3VtbWFyeSkge1xuICAgICAgdmFyIGV4cGFuZGVkID0gc3VtbWFyeS5fX2RldGFpbHMuX19zdW1tYXJ5LmdldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcpID09PSAndHJ1ZSdcbiAgICAgIHZhciBoaWRkZW4gPSBzdW1tYXJ5Ll9fZGV0YWlscy5fX2NvbnRlbnQuZ2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicpID09PSAndHJ1ZSdcblxuICAgICAgc3VtbWFyeS5fX2RldGFpbHMuX19zdW1tYXJ5LnNldEF0dHJpYnV0ZSgnYXJpYS1leHBhbmRlZCcsIChleHBhbmRlZCA/ICdmYWxzZScgOiAndHJ1ZScpKVxuICAgICAgc3VtbWFyeS5fX2RldGFpbHMuX19jb250ZW50LnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAoaGlkZGVuID8gJ2ZhbHNlJyA6ICd0cnVlJykpXG5cbiAgICAgIGlmICghR09WVUsuZGV0YWlscy5OQVRJVkVfREVUQUlMUykge1xuICAgICAgICBzdW1tYXJ5Ll9fZGV0YWlscy5fX2NvbnRlbnQuc3R5bGUuZGlzcGxheSA9IChleHBhbmRlZCA/ICdub25lJyA6ICcnKVxuXG4gICAgICAgIHZhciBoYXNPcGVuQXR0ciA9IHN1bW1hcnkuX19kZXRhaWxzLmdldEF0dHJpYnV0ZSgnb3BlbicpICE9PSBudWxsXG4gICAgICAgIGlmICghaGFzT3BlbkF0dHIpIHtcbiAgICAgICAgICBzdW1tYXJ5Ll9fZGV0YWlscy5zZXRBdHRyaWJ1dGUoJ29wZW4nLCAnb3BlbicpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3VtbWFyeS5fX2RldGFpbHMucmVtb3ZlQXR0cmlidXRlKCdvcGVuJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VtbWFyeS5fX3R3aXN0eSkge1xuICAgICAgICBzdW1tYXJ5Ll9fdHdpc3R5LmZpcnN0Q2hpbGQubm9kZVZhbHVlID0gKGV4cGFuZGVkID8gJ1xcdTI1YmEnIDogJ1xcdTI1YmMnKVxuICAgICAgICBzdW1tYXJ5Ll9fdHdpc3R5LnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAoZXhwYW5kZWQgPyAnYXJyb3cgYXJyb3ctY2xvc2VkJyA6ICdhcnJvdyBhcnJvdy1vcGVuJykpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0cnVlXG4gICAgfSxcblxuICAgIGRlc3Ryb3k6IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICBHT1ZVSy5kZXRhaWxzLnJlbW92ZUV2ZW50KG5vZGUsICdjbGljaycpXG4gICAgfSxcblxuICAgIC8vIEJpbmQgdHdvIGxvYWQgZXZlbnRzIGZvciBtb2Rlcm4gYW5kIG9sZGVyIGJyb3dzZXJzXG4gICAgLy8gSWYgdGhlIGZpcnN0IG9uZSBmaXJlcyBpdCB3aWxsIHNldCBhIGZsYWcgdG8gYmxvY2sgdGhlIHNlY29uZCBvbmVcbiAgICAvLyBidXQgaWYgaXQncyBub3Qgc3VwcG9ydGVkIHRoZW4gdGhlIHNlY29uZCBvbmUgd2lsbCBmaXJlXG4gICAgaW5pdDogZnVuY3Rpb24gKCRjb250YWluZXIpIHtcbiAgICAgIEdPVlVLLmRldGFpbHMuYWRkRXZlbnQoZG9jdW1lbnQsICdET01Db250ZW50TG9hZGVkJywgR09WVUsuZGV0YWlscy5hZGREZXRhaWxzUG9seWZpbGwpXG4gICAgICBHT1ZVSy5kZXRhaWxzLmFkZEV2ZW50KHdpbmRvdywgJ2xvYWQnLCBHT1ZVSy5kZXRhaWxzLmFkZERldGFpbHNQb2x5ZmlsbClcbiAgICB9XG4gIH1cbiAgZ2xvYmFsLkdPVlVLID0gR09WVUtcbn0pKHdpbmRvdylcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgTlNBID0gTlNBIHx8IHt9O1xudmFyIGZpbHRlckJveGVzID0gJCgnLmZpbHRlci1ib3gnKTtcblxuTlNBLmZpbHRlcnMgPSB7XG4gIGluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICBmaWx0ZXJCb3hlcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhhdCA9ICQodGhpcyksXG4gICAgICAgICAgaGVhZGVyID0gJHRoYXQuZmluZCgnLmNvbnRhaW5lci1oZWFkJyksXG4gICAgICAgICAgdGl0bGUgPSBoZWFkZXIuZmluZCgnLm9wdGlvbi1zZWxlY3QtbGFiZWwnKSxcbiAgICAgICAgICBjaGVja2JveGVzID0gJHRoYXQuZmluZCgnaW5wdXQ6Y2hlY2tib3gnKSxcbiAgICAgICAgICBidXR0b24gPSAkKCc8YnV0dG9uIC8+JykuYWRkQ2xhc3MoJ2pzLWNvbnRhaW5lci1oZWFkJyksXG4gICAgICAgICAgY2hlY2tDb3VudCA9ICQoJzxkaXYgLz4nKS5hZGRDbGFzcygnanMtc2VsZWN0ZWQtY291bnRlcicpO1xuXG4gICAgICBidXR0b24ub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgdmFyIG9wdGlvbnMgPSAkKHRoaXMpLm5leHQoKTtcbiAgICAgICAgaWYgKCQodGhpcykuaGFzQ2xhc3MoJ2Nsb3NlZCcpKSB7XG4gICAgICAgICAgb3B0aW9ucy5zaG93KCk7XG4gICAgICAgICAgJCh0aGlzKVxuICAgICAgICAgICAgLnJlbW92ZUNsYXNzKCdjbG9zZWQnKVxuICAgICAgICAgICAgLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCB0cnVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvcHRpb25zLmhpZGUoKTtcbiAgICAgICAgICAkKHRoaXMpXG4gICAgICAgICAgICAuYWRkQ2xhc3MoJ2Nsb3NlZCcpXG4gICAgICAgICAgICAuYXR0cignYXJpYS1leHBhbmRlZCcsIGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9KS5hcHBlbmQodGl0bGUsIGNoZWNrQ291bnQpO1xuXG4gICAgICBoZWFkZXIucmVwbGFjZVdpdGgoYnV0dG9uKTtcblxuICAgICAgY2hlY2tib3hlcy5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBjaGVja0NvdW50LnRleHQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIGNoZWNrYm94ZXMuZmlsdGVyKCc6Y2hlY2tlZCcpLmxlbmd0aCA+IDAgPyBjaGVja2JveGVzLmZpbHRlcignOmNoZWNrZWQnKS5sZW5ndGggKyAnIHNlbGVjdGVkJyA6ICcnO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG5cbmlmIChmaWx0ZXJCb3hlcy5sZW5ndGggPiAwKSB7XG4gIE5TQS5maWx0ZXJzLmluaXQoKTtcbn1cbiIsInZhciBnYUV2ZW50ID0gJCgnI2dhLWV2ZW50Jyk7XG5cbmlmIChnYUV2ZW50Lmxlbmd0aCA+IDApIHtcbiAgdmFyIGNhdGVnb3J5ID0gZ2FFdmVudC5kYXRhKCdjYXRlZ29yeScpLFxuICAgIGxhYmVsID0gZ2FFdmVudC5kYXRhKCdsYWJlbCcpLFxuICAgIGV2ZW50ID0gZ2FFdmVudC5kYXRhKCdldmVudCcpO1xuXG4gIGlmIChldmVudCAhPT0gJycgJiYgbGFiZWwgIT09ICcnICYmIGNhdGVnb3J5ICE9PSAnJykge1xuICAgIGd0YWcoJ2V2ZW50JywgZXZlbnQsIHtcbiAgICAgIGV2ZW50X2NhdGVnb3J5OiBjYXRlZ29yeSxcbiAgICAgIGV2ZW50X2xhYmVsOiBsYWJlbCxcbiAgICB9KTtcbiAgfVxufVxuXG4kKCcubm90aWZpY2F0aW9uIGEnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gIGlmICgkKHRoaXMpLmRhdGEoJ2NsaWVudGlkJykpIHtcbiAgICBndGFnKCdldmVudCcsICdkb3dubG9hZCcsIHtcbiAgICAgIGV2ZW50X2NhdGVnb3J5OiAnbWlncmF0aW9uLWhlbHAtcGRmJyxcbiAgICAgIGV2ZW50X2xhYmVsOiAkKHRoaXMpLmRhdGEoJ2NsaWVudGlkJyksXG4gICAgfSk7XG4gIH1cbn0pO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBOU0EgPSBOU0EgfHwge307XG5cbk5TQS5zaWduaW4gPSB7XG4gIGZvcm06ICQoJy5mb3JtLXNpZ25pbicpLFxuICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5zZXR1cEV2ZW50cygpO1xuICB9LFxuICBzZXR1cEV2ZW50czogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZm9ybS5vbignc3VibWl0JywgdGhpcywgdGhpcy5oYW5kbGVTdWJtaXQpO1xuICB9LFxuICBoYW5kbGVTdWJtaXQ6IGZ1bmN0aW9uIChlKSB7XG5cbiAgICB2YXIgJGZvcm0gPSAkKHRoaXMpO1xuICAgIHZhciAkaW5wdXRzID0gJGZvcm0uZmluZCgnaW5wdXQnKS5ub3QoJzpjaGVja2JveCcpLCBwb3N0RGF0YSA9IHt9LCAkc3VibWl0QnV0dG9ucyA9ICQodGhpcykuZmluZCgnYnV0dG9uOnN1Ym1pdCcpLCAkc3VibWl0QnV0dG9uID0gJHN1Ym1pdEJ1dHRvbnMuZXEoMCk7XG5cbiAgICAkc3VibWl0QnV0dG9ucy5hdHRyKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xuXG4gICAgJHN1Ym1pdEJ1dHRvbi5jc3MoJ21pbi13aWR0aCcsICRzdWJtaXRCdXR0b24ub3V0ZXJXaWR0aCgpICsgJ3B4JylcblxuICAgICRzdWJtaXRCdXR0b24uZmluZCgnLmxvYWRlcicpLnJlbW92ZUNsYXNzKCd2aCcpO1xuXG4gICAgJGlucHV0cy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgcG9zdERhdGFbdGhpcy5uYW1lXSA9ICQodGhpcykudmFsKCk7XG4gICAgfSk7XG5cbiAgICAkKCcjcGFzc3dvcmQnKS5wcm9wKCd0eXBlJywgJ3Bhc3N3b3JkJykubmV4dCgpLnJlbW92ZUNsYXNzKCd0eXBlLXBhc3N3b3JkJyk7XG5cbiAgICAkLmFqYXgoe1xuICAgICAgdHlwZTogJ1BPU1QnLFxuICAgICAgZGF0YTogcG9zdERhdGEsXG4gICAgICB1cmw6ICRmb3JtLmF0dHIoJ2FjdGlvbicpLFxuICAgICAgY29udGV4dDogZS5kYXRhLFxuICAgICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGlmIChkYXRhLnJlZGlyZWN0KSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBkYXRhLnVyaTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoZGF0YS5pc0ZhaWxlZExvZ2luKSB7XG4gICAgICAgICAgICB0aGlzLnJlc2V0VmFsaWRhdGlvbigkZm9ybSk7XG4gICAgICAgICAgICB0aGlzLnNob3dWYWxpZGF0aW9uTWVzc2FnZShkYXRhLnZhbGlkYXRpb25NZXNzYWdlcyk7XG4gICAgICAgICAgICB0aGlzLnNob3dJbmxpbmVWYWxpZGF0aW9uKGRhdGEudmFsaWRhdGlvbk1lc3NhZ2VzKTtcbiAgICAgICAgICAgICRzdWJtaXRCdXR0b25zLnJlbW92ZUF0dHIoJ2Rpc2FibGVkJyk7XG4gICAgICAgICAgICAkc3VibWl0QnV0dG9uLmZpbmQoJy5sb2FkZXInKS5hZGRDbGFzcygndmgnKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZ3RhZygnZXZlbnQnLCAnU3VjY2Vzc2Z1bCBsb2dpbicsIHtcbiAgICAgICAgICAgICAgZXZlbnRfY2F0ZWdvcnk6ICdMb2dpbicsXG4gICAgICAgICAgICAgIGV2ZW50X2xhYmVsOiBnZXRQYXJhbWV0ZXJCeU5hbWUoJ2NsaWVudGlkJyksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuYnVpbGRGb3JtQW5kU3VibWl0KGRhdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGVycm9yOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5yZXNldFZhbGlkYXRpb24oJGZvcm0pO1xuICAgICAgICB0aGlzLnNob3dWYWxpZGF0aW9uTWVzc2FnZSgpO1xuICAgICAgICAkc3VibWl0QnV0dG9ucy5yZW1vdmVBdHRyKCdkaXNhYmxlZCcpO1xuICAgICAgICAkc3VibWl0QnV0dG9uLmZpbmQoJy5sb2FkZXInKS5hZGRDbGFzcygndmgnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIH0sXG4gIHJlc2V0VmFsaWRhdGlvbjogZnVuY3Rpb24gKCRmb3JtKSB7XG5cbiAgICB2YXIgJGZvcm1Hcm91cHMgPSAkZm9ybS5maW5kKCcuZm9ybS1ncm91cCcpO1xuXG4gICAgJCgnLmVycm9yLXN1bW1hcnknKS5yZW1vdmUoKTtcblxuICAgICRmb3JtR3JvdXBzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICRmaWVsZCA9ICQodGhpcykuZmluZCgnaW5wdXQnKS5lcSgwKTtcbiAgICAgIGlmICgkKHRoaXMpLmhhc0NsYXNzKCdmb3JtLWdyb3VwLWVycm9yJykpIHtcbiAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygnZm9ybS1ncm91cC1lcnJvcicpO1xuICAgICAgICAkKHRoaXMpLmZpbmQoJ3AuZXJyb3ItbWVzc2FnZScpLnJlbW92ZSgpO1xuICAgICAgICAkZmllbGQucmVtb3ZlQXR0cignYXJpYS1kZXNjcmliZWRieScpLnJlbW92ZUF0dHIoJ2FyaWEtaW52YWxpZCcpO1xuICAgICAgfVxuICAgIH0pO1xuICB9LFxuXG4gIHNob3dWYWxpZGF0aW9uTWVzc2FnZTogZnVuY3Rpb24gKG1lc3NhZ2VzKSB7XG5cbiAgICB2YXIgJGRpdiA9ICQoJzxkaXYgLz4nKS5hdHRyKCdjbGFzcycsICdlcnJvci1zdW1tYXJ5JykuYXR0cigncm9sZScsICdhbGVydCcpLmF0dHIoJ3RhYmluZGV4JywgJy0xJyk7XG4gICAgdmFyICRoMiA9ICQoJzxoMiAvPicpLmF0dHIoJ2NsYXNzJywgJ2hlYWRpbmctbWVkaXVtIGVycm9yLXN1bW1hcnktaGVhZGluZycpLmF0dHIoJ2lkJywgJ2Vycm9yLXN1bW1hcnknKTtcbiAgICB2YXIgJHVsID0gJCgnPHVsIC8+JykuYXR0cignY2xhc3MnLCAnZXJyb3Itc3VtbWFyeS1saXN0Jyk7XG5cbiAgICBpZiAobWVzc2FnZXMpIHtcbiAgICAgICRoMi50ZXh0KCdJbmZvcm1hdGlvbiBtaXNzaW5nIG9yIGluY29ycmVjdCcpO1xuICAgICAgJC5lYWNoKG1lc3NhZ2VzLCBmdW5jdGlvbiAoaW5kZXgsIHZhbHVlKSB7XG4gICAgICAgIGlmIChpbmRleCA9PT0gJ2xvZ2luRXJyb3InKSB7XG4gICAgICAgICAgaW5kZXggPSAndXNlcm5hbWUnO1xuICAgICAgICAgIGd0YWcoJ2V2ZW50JywgJ0ZhaWxlZCBsb2dpbicsIHtcbiAgICAgICAgICAgIGV2ZW50X2NhdGVnb3J5OiAnTG9naW4nLFxuICAgICAgICAgICAgZXZlbnRfbGFiZWw6ICdVc2VycyBsb2dpbiBjcmVkZW50aWFscyB3ZXJlIHdyb25nJyxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgJGEgPSAkKCc8YSAvPicpLmF0dHIoJ2hyZWYnLCAnIycgKyBpbmRleCkudGV4dCh2YWx1ZSk7XG4gICAgICAgIHZhciAkbGkgPSAkKCc8bGkgLz4nKS5hcHBlbmQoJGEpO1xuICAgICAgICAkdWwuYXBwZW5kKCRsaSk7XG4gICAgICB9KTtcblxuICAgIH0gZWxzZSB7XG4gICAgICAkaDIudGV4dCgnVGhlcmUgaGFzIGJlZW4gYW4gZXJyb3InKTtcbiAgICAgIHZhciAkbGkgPSAkKCc8bGkgLz4nKS5odG1sKCdQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLiBJZiB0aGUgcHJvYmxlbSBjb250aW51ZXMsIGZvbGxvdyB0aGUgbGluayB0byA8YSBocmVmPVwiaHR0cHM6Ly9oZWxwLnNpZ25pbi5lZHVjYXRpb24uZ292LnVrL2NvbnRhY3QvZm9ybVwiPnN1Ym1pdCBhIHN1cHBvcnQgcmVxdWVzdDwvYT4nKTtcbiAgICAgICR1bC5hcHBlbmQoJGxpKTtcbiAgICAgIGd0YWcoJ2V2ZW50JywgJ0Vycm9yIG9jY3VycmVkJywge1xuICAgICAgICBldmVudF9jYXRlZ29yeTogJ0xvZ2luJyxcbiAgICAgICAgZXZlbnRfbGFiZWw6ICdBIHNlcnZlciBlcnJvciBvY2N1cnJlZCBkdXJpbmcgbG9naW4nLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgJGRpdi5hcHBlbmQoJGgyKS5hcHBlbmQoJHVsKTtcbiAgICAkKCdtYWluJykucHJlcGVuZCgkZGl2KTtcblxuICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHtcbiAgICAgIHNjcm9sbFRvcDogJGRpdi5vZmZzZXQoKS50b3AgLSAxNVxuICAgIH0sIDMwMCk7XG5cbiAgfSxcbiAgc2hvd0lubGluZVZhbGlkYXRpb246IGZ1bmN0aW9uKG1lc3NhZ2VzKSB7XG5cbiAgICAkLmVhY2gobWVzc2FnZXMsIGZ1bmN0aW9uKCBpbmRleCwgdmFsdWUgKSB7XG4gICAgICB2YXIgJGZpZWxkID0gJCgnaW5wdXRbbmFtZT0nICsgaW5kZXggKyAnXScpLFxuICAgICAgICAkcGFyZW50ID0gJGZpZWxkLnBhcmVudCgpO1xuXG4gICAgICBpZiAoJHBhcmVudC5oYXNDbGFzcygnc2hvdy1wYXNzd29yZCcpKSB7XG4gICAgICAgICRwYXJlbnQgPSAkcGFyZW50LnBhcmVudCgpO1xuICAgICAgfVxuXG4gICAgICB2YXIgJGxhYmVsID0gJHBhcmVudC5maW5kKCdsYWJlbCcpLmZpcnN0KCk7XG5cbiAgICAgIGlmICghJHBhcmVudC5oYXNDbGFzcygnZm9ybS1ncm91cC1lcnJvcicpKSB7XG5cbiAgICAgICAgdmFyIGVycm9yTWVzc2FnZSA9ICQoJzxwPicpXG4gICAgICAgICAgLmh0bWwodmFsdWUpXG4gICAgICAgICAgLnByb3AoJ2NsYXNzJywgJ2Vycm9yLW1lc3NhZ2UnKVxuICAgICAgICAgIC5wcm9wKCdpZCcsICd2YWxpZGF0aW9uLScgKyBpbmRleCk7XG4gICAgICB9XG5cbiAgICAgICRsYWJlbC5hZnRlcihlcnJvck1lc3NhZ2UpO1xuICAgICAgJHBhcmVudC5hZGRDbGFzcygnZm9ybS1ncm91cC1lcnJvcicpO1xuICAgICAgJGZpZWxkLmF0dHIoe1xuICAgICAgICAnYXJpYS1kZXNjcmliZWRieScgOiAndmFsaWRhdGlvbi0nICsgaW5kZXgsXG4gICAgICAgICdhcmlhLWludmFsaWQnOiAndHJ1ZSdcbiAgICAgIH0pO1xuXG4gICAgfSk7XG5cbiAgfSxcbiAgYnVpbGRGb3JtQW5kU3VibWl0OiBmdW5jdGlvbiAoZGF0YSkge1xuXG4gICAgdmFyICRmb3JtID0gJCgnPGZvcm0gLz4nKS5hdHRyKHtcbiAgICAgIG1ldGhvZDogJ3Bvc3QnLFxuICAgICAgYWN0aW9uOiBkYXRhLmRlc3RpbmF0aW9uLFxuICAgICAgaWQ6ICdkZmVzaWduaW5mb3JtJ1xuICAgIH0pO1xuXG4gICAgJC5lYWNoKGRhdGEucG9zdGJhY2tEYXRhLCBmdW5jdGlvbiggaW5kZXgsIHZhbHVlICkge1xuICAgICAgdmFyICRmaWVsZCA9ICQoJzxpbnB1dCAvPicpLmF0dHIoe1xuICAgICAgICB0eXBlOiAnaGlkZGVuJyxcbiAgICAgICAgbmFtZTogaW5kZXgsXG4gICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgfSk7XG4gICAgICAkZm9ybS5hcHBlbmQoJGZpZWxkKTtcbiAgICB9KTtcblxuICAgICQoJyNkZmVzaWduaW5mb3JtJykucmVtb3ZlKCk7XG4gICAgJCgnYm9keScpLmFwcGVuZCgkZm9ybSk7XG4gICAgJGZvcm0uc3VibWl0KCk7XG4gIH0sXG59O1xuXG5pZiAoJCgnLmZvcm0tc2lnbmluJykubGVuZ3RoID4gMCkge1xuICBOU0Euc2lnbmluLmluaXQoKTtcbn1cblxuZnVuY3Rpb24gZ2V0UGFyYW1ldGVyQnlOYW1lKG5hbWUsIHVybCkge1xuICBpZiAoIXVybCkgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIG5hbWUgPSBuYW1lLnJlcGxhY2UoL1tcXFtcXF1dL2csIFwiXFxcXCQmXCIpO1xuICB2YXIgcmVnZXggPSBuZXcgUmVnRXhwKFwiWz8mXVwiICsgbmFtZSArIFwiKD0oW14mI10qKXwmfCN8JClcIiksXG4gICAgcmVzdWx0cyA9IHJlZ2V4LmV4ZWModXJsKTtcbiAgaWYgKCFyZXN1bHRzKSByZXR1cm4gbnVsbDtcbiAgaWYgKCFyZXN1bHRzWzJdKSByZXR1cm4gJyc7XG4gIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQocmVzdWx0c1syXS5yZXBsYWNlKC9cXCsvZywgXCIgXCIpKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBzb3J0VGFibGUobikge1xuICB2YXIgdGFibGUsIHJvd3MsIHN3aXRjaGluZywgaSwgeCwgeSwgc2hvdWxkU3dpdGNoLCBkaXJlY3Rpb24sIHN3aXRjaGNvdW50ID0gMDtcbiAgdGFibGUgPSAkKCd0YWJsZS5zb3J0YWJsZScpO1xuICBzd2l0Y2hpbmcgPSB0cnVlO1xuICBkaXJlY3Rpb24gPSAnYSc7XG5cbiAgd2hpbGUgKHN3aXRjaGluZykge1xuXG4gICAgc3dpdGNoaW5nID0gZmFsc2U7XG4gICAgcm93cyA9IHRhYmxlLmZpbmQoJ3RyJyk7XG5cbiAgICBmb3IgKGkgPSAxOyBpIDwgKHJvd3MubGVuZ3RoIC0gMSk7IGkrKykge1xuXG4gICAgICBzaG91bGRTd2l0Y2ggPSBmYWxzZTtcblxuICAgICAgeCA9IHJvd3NbaV0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ1REJylbbl07XG4gICAgICB5ID0gcm93c1tpICsgMV0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ1REJylbbl07XG5cbiAgICAgIGlmIChkaXJlY3Rpb24gPT09ICdhJykge1xuICAgICAgICBpZiAoeC5pbm5lckhUTUwudG9Mb3dlckNhc2UoKSA+IHkuaW5uZXJIVE1MLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICBzaG91bGRTd2l0Y2ggPSB0cnVlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGRpcmVjdGlvbiA9PT0gJ2QnKSB7XG4gICAgICAgIGlmICh4LmlubmVySFRNTC50b0xvd2VyQ2FzZSgpIDwgeS5pbm5lckhUTUwudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICAgIHNob3VsZFN3aXRjaCA9IHRydWU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoc2hvdWxkU3dpdGNoKSB7XG5cbiAgICAgIHJvd3NbaV0ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUocm93c1tpICsgMV0sIHJvd3NbaV0pO1xuICAgICAgc3dpdGNoaW5nID0gdHJ1ZTtcblxuICAgICAgc3dpdGNoY291bnQgKys7XG5cbiAgICB9IGVsc2Uge1xuXG4gICAgICBpZiAoc3dpdGNoY291bnQgPT09IDAgJiYgZGlyZWN0aW9uID09PSAnYScpIHtcbiAgICAgICAgZGlyZWN0aW9uID0gJ2QnO1xuICAgICAgICBzd2l0Y2hpbmcgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgfVxuICB9XG4gIHJldHVybiBkaXJlY3Rpb247XG59XG5cbiQoZnVuY3Rpb24gKCkge1xuXG4gICQoJ3RhYmxlLnNvcnRhYmxlIHRoZWFkIHRoJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuXG4gICAgdmFyIGhlYWRpbmdDZWxscyA9ICQoJ3RhYmxlLnNvcnRhYmxlIHRoZWFkIHRyIHRoJyk7XG5cbiAgICBoZWFkaW5nQ2VsbHMucmVtb3ZlQ2xhc3MoJ3NvcnRlZCcpLnJlbW92ZUNsYXNzKCdkaXItYScpLnJlbW92ZUNsYXNzKCdkaXItZCcpO1xuXG4gICAgdmFyIGluZGV4ID0gaGVhZGluZ0NlbGxzLmluZGV4KCQodGhpcykpO1xuXG4gICAgdmFyIGRpcmVjdGlvbiA9IHNvcnRUYWJsZShpbmRleCk7XG5cbiAgICAkKHRoaXMpLmFkZENsYXNzKCdzb3J0ZWQgZGlyLScgKyBkaXJlY3Rpb24pO1xuXG4gIH0pO1xuXG59KTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgTlNBID0gTlNBIHx8IHt9O1xuXG5OU0EubW9kYWwgPSB7XG4gIGVsZW1zOiB7XG4gICAgbGlua3M6ICQoJy5tb2RhbC1saW5rJyksXG4gICAgbW9kYWxzOiAkKCcubW9kYWwnKVxuICB9LFxuICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5tb2RhbEJnKCk7XG4gICAgdGhpcy5zZXRVcEV2ZW50cygpO1xuICB9LFxuICBtb2RhbEJnOiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgIHZhciBiZyA9ICQoJzxkaXY+JykuYWRkQ2xhc3MoJ21vZGFsLWJnJykuaGlkZSgpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHsgdGhhdC5oaWRlTW9kYWxzKCk7IH0pO1xuICAgICQoJ2JvZHknKS5hcHBlbmQoYmcpO1xuICB9LFxuICBzZXRVcEV2ZW50czogZnVuY3Rpb24gKCkge1xuICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICB0aGlzLmVsZW1zLmxpbmtzLm9uKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgdGFyZ2V0ID0gJCh0aGlzKS5hdHRyKCdocmVmJyk7XG4gICAgICB0aGF0LnNob3dNb2RhbCgkKHRhcmdldCkpO1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuXG4gICAgdGhhdC5lbGVtcy5tb2RhbHMuZmluZCgnLmNsb3NlJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIHRoYXQuaGlkZU1vZGFscygpO1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuXG4gICAgJCgnYm9keScpLm9uKCdrZXlkb3duJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGlmICgoZS5rZXlDb2RlIHx8IGUud2hpY2gpID09PSAyNylcbiAgICAgICAgdGhhdC5oaWRlTW9kYWxzKCk7XG4gICAgfSk7XG4gIH0sXG4gIHNob3dNb2RhbDogZnVuY3Rpb24gKG1vZGFsKSB7XG4gICAgJCgnaHRtbCcpLmFkZENsYXNzKCdtb2RhbC1vcGVuJyk7XG4gICAgJCgnLm1vZGFsLWJnJykuc2hvdygpO1xuICAgIG1vZGFsLnNob3coKTtcbiAgfSxcbiAgaGlkZU1vZGFsczogZnVuY3Rpb24gKCkge1xuICAgICQoJ2h0bWwnKS5yZW1vdmVDbGFzcygnbW9kYWwtb3BlbicpO1xuICAgICQoJy5tb2RhbC1iZycpLmhpZGUoKTtcbiAgICB0aGlzLmVsZW1zLm1vZGFscy5oaWRlKCk7XG4gIH1cbn1cblxuTlNBLm1vZGFsLmluaXQoKTtcbiIsIjsoZnVuY3Rpb24gKGdsb2JhbCkge1xuICAndXNlIHN0cmljdCdcblxuICB2YXIgJCA9IGdsb2JhbC5qUXVlcnlcbiAgdmFyIEdPVlVLID0gZ2xvYmFsLkdPVlVLIHx8IHt9XG5cbiAgZnVuY3Rpb24gU2hvd0hpZGVDb250ZW50ICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcblxuICAgIC8vIFJhZGlvIGFuZCBDaGVja2JveCBzZWxlY3RvcnNcbiAgICB2YXIgc2VsZWN0b3JzID0ge1xuICAgICAgbmFtZXNwYWNlOiAnU2hvd0hpZGVDb250ZW50JyxcbiAgICAgIHJhZGlvOiAnW2RhdGEtdGFyZ2V0XSA+IGlucHV0W3R5cGU9XCJyYWRpb1wiXScsXG4gICAgICBjaGVja2JveDogJ1tkYXRhLXRhcmdldF0gPiBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0nLFxuICAgICAgbGluazogJ2EuanMtdG9nZ2xlLWNvbnRlbnQnXG4gICAgfVxuXG4gICAgLy8gRXNjYXBlIG5hbWUgYXR0cmlidXRlIGZvciB1c2UgaW4gRE9NIHNlbGVjdG9yXG4gICAgZnVuY3Rpb24gZXNjYXBlRWxlbWVudE5hbWUgKHN0cikge1xuICAgICAgdmFyIHJlc3VsdCA9IHN0ci5yZXBsYWNlKCdbJywgJ1xcXFxbJykucmVwbGFjZSgnXScsICdcXFxcXScpXG4gICAgICByZXR1cm4gcmVzdWx0XG4gICAgfVxuXG4gICAgLy8gQWRkcyBBUklBIGF0dHJpYnV0ZXMgdG8gY29udHJvbCArIGFzc29jaWF0ZWQgY29udGVudFxuICAgIGZ1bmN0aW9uIGluaXRUb2dnbGVkQ29udGVudCAoKSB7XG4gICAgICB2YXIgJGNvbnRyb2wgPSAkKHRoaXMpXG4gICAgICB2YXIgJGNvbnRlbnQgPSBnZXRUb2dnbGVkQ29udGVudCgkY29udHJvbClcblxuICAgICAgLy8gU2V0IGFyaWEtY29udHJvbHMgYW5kIGRlZmF1bHRzXG4gICAgICBpZiAoJGNvbnRlbnQubGVuZ3RoKSB7XG4gICAgICAgICRjb250cm9sLmF0dHIoJ2FyaWEtY29udHJvbHMnLCAkY29udGVudC5hdHRyKCdpZCcpKVxuICAgICAgICAkY29udHJvbC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJylcbiAgICAgICAgJGNvbnRlbnQuYXR0cignYXJpYS1oaWRkZW4nLCAndHJ1ZScpXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIHRvZ2dsZWQgY29udGVudCBmb3IgY29udHJvbFxuICAgIGZ1bmN0aW9uIGdldFRvZ2dsZWRDb250ZW50ICgkY29udHJvbCkge1xuICAgICAgdmFyIGlkID0gJGNvbnRyb2wuYXR0cignYXJpYS1jb250cm9scycpXG5cbiAgICAgIC8vIEFSSUEgYXR0cmlidXRlcyBhcmVuJ3Qgc2V0IGJlZm9yZSBpbml0XG4gICAgICBpZiAoIWlkKSB7XG4gICAgICAgIGlkID0gJGNvbnRyb2wuY2xvc2VzdCgnW2RhdGEtdGFyZ2V0XScpLmRhdGEoJ3RhcmdldCcpXG4gICAgICB9XG5cbiAgICAgIC8vIEZpbmQgc2hvdy9oaWRlIGNvbnRlbnQgYnkgaWRcbiAgICAgIHJldHVybiAkKCcjJyArIGlkKVxuICAgIH1cblxuICAgIC8vIFNob3cgdG9nZ2xlZCBjb250ZW50IGZvciBjb250cm9sXG4gICAgZnVuY3Rpb24gc2hvd1RvZ2dsZWRDb250ZW50ICgkY29udHJvbCwgJGNvbnRlbnQpIHtcbiAgICAgIC8vIFNob3cgY29udGVudFxuICAgICAgaWYgKCRjb250ZW50Lmhhc0NsYXNzKCdqcy1oaWRkZW4nKSkge1xuICAgICAgICAkY29udGVudC5yZW1vdmVDbGFzcygnanMtaGlkZGVuJylcbiAgICAgICAgJGNvbnRlbnQuYXR0cignYXJpYS1oaWRkZW4nLCAnZmFsc2UnKVxuXG4gICAgICAgIC8vIElmIHRoZSBjb250cm9sbGluZyBpbnB1dCwgdXBkYXRlIGFyaWEtZXhwYW5kZWRcbiAgICAgICAgaWYgKCRjb250cm9sLmF0dHIoJ2FyaWEtY29udHJvbHMnKSkge1xuICAgICAgICAgICRjb250cm9sLmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCAndHJ1ZScpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBIaWRlIHRvZ2dsZWQgY29udGVudCBmb3IgY29udHJvbFxuICAgIGZ1bmN0aW9uIGhpZGVUb2dnbGVkQ29udGVudCAoJGNvbnRyb2wsICRjb250ZW50KSB7XG4gICAgICAkY29udGVudCA9ICRjb250ZW50IHx8IGdldFRvZ2dsZWRDb250ZW50KCRjb250cm9sKVxuXG4gICAgICAvLyBIaWRlIGNvbnRlbnRcbiAgICAgIGlmICghJGNvbnRlbnQuaGFzQ2xhc3MoJ2pzLWhpZGRlbicpKSB7XG4gICAgICAgICRjb250ZW50LmFkZENsYXNzKCdqcy1oaWRkZW4nKVxuICAgICAgICAkY29udGVudC5hdHRyKCdhcmlhLWhpZGRlbicsICd0cnVlJylcblxuICAgICAgICAvLyBJZiB0aGUgY29udHJvbGxpbmcgaW5wdXQsIHVwZGF0ZSBhcmlhLWV4cGFuZGVkXG4gICAgICAgIGlmICgkY29udHJvbC5hdHRyKCdhcmlhLWNvbnRyb2xzJykpIHtcbiAgICAgICAgICAkY29udHJvbC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJylcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEhhbmRsZSByYWRpbyBzaG93L2hpZGVcbiAgICBmdW5jdGlvbiBoYW5kbGVSYWRpb0NvbnRlbnQgKCRjb250cm9sLCAkY29udGVudCkge1xuICAgICAgLy8gQWxsIHJhZGlvcyBpbiB0aGlzIGdyb3VwIHdoaWNoIGNvbnRyb2wgY29udGVudFxuICAgICAgdmFyIHNlbGVjdG9yID0gc2VsZWN0b3JzLnJhZGlvICsgJ1tuYW1lPScgKyBlc2NhcGVFbGVtZW50TmFtZSgkY29udHJvbC5hdHRyKCduYW1lJykpICsgJ11bYXJpYS1jb250cm9sc10nXG4gICAgICB2YXIgJGZvcm0gPSAkY29udHJvbC5jbG9zZXN0KCdmb3JtJylcbiAgICAgIHZhciAkcmFkaW9zID0gJGZvcm0ubGVuZ3RoID8gJGZvcm0uZmluZChzZWxlY3RvcikgOiAkKHNlbGVjdG9yKVxuXG4gICAgICAvLyBIaWRlIGNvbnRlbnQgZm9yIHJhZGlvcyBpbiBncm91cFxuICAgICAgJHJhZGlvcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaGlkZVRvZ2dsZWRDb250ZW50KCQodGhpcykpXG4gICAgICB9KVxuXG4gICAgICAvLyBTZWxlY3QgY29udGVudCBmb3IgdGhpcyBjb250cm9sXG4gICAgICBpZiAoJGNvbnRyb2wuaXMoJ1thcmlhLWNvbnRyb2xzXScpKSB7XG4gICAgICAgIHNob3dUb2dnbGVkQ29udGVudCgkY29udHJvbCwgJGNvbnRlbnQpXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIGNoZWNrYm94IHNob3cvaGlkZVxuICAgIGZ1bmN0aW9uIGhhbmRsZUNoZWNrYm94Q29udGVudCAoJGNvbnRyb2wsICRjb250ZW50KSB7XG4gICAgICAvLyBTaG93IGNoZWNrYm94IGNvbnRlbnRcbiAgICAgIGlmICgkY29udHJvbC5pcygnOmNoZWNrZWQnKSkge1xuICAgICAgICBzaG93VG9nZ2xlZENvbnRlbnQoJGNvbnRyb2wsICRjb250ZW50KVxuICAgICAgfSBlbHNlIHsgLy8gSGlkZSBjaGVja2JveCBjb250ZW50XG4gICAgICAgIGhpZGVUb2dnbGVkQ29udGVudCgkY29udHJvbCwgJGNvbnRlbnQpXG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIGNoZWNrYm94IHNob3cvaGlkZVxuICAgIGZ1bmN0aW9uIGhhbmRsZUxpbmtDb250ZW50ICgkY29udHJvbCwgJGNvbnRlbnQsICRldmVudCkge1xuICAgICAgaWYgKCRjb250ZW50Lmhhc0NsYXNzKCdqcy1oaWRkZW4nKSkge1xuICAgICAgICBzaG93VG9nZ2xlZENvbnRlbnQoJGNvbnRyb2wsICRjb250ZW50KVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaGlkZVRvZ2dsZWRDb250ZW50KCRjb250cm9sLCAkY29udGVudClcbiAgICAgIH1cbiAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgfVxuXG4gICAgLy8gU2V0IHVwIGV2ZW50IGhhbmRsZXJzIGV0Y1xuICAgIGZ1bmN0aW9uIGluaXQgKCRjb250YWluZXIsIGVsZW1lbnRTZWxlY3RvciwgZXZlbnRTZWxlY3RvcnMsIGhhbmRsZXIpIHtcbiAgICAgICRjb250YWluZXIgPSAkY29udGFpbmVyIHx8ICQoZG9jdW1lbnQuYm9keSlcblxuICAgICAgLy8gSGFuZGxlIGNvbnRyb2wgY2xpY2tzXG4gICAgICBmdW5jdGlvbiBkZWZlcnJlZCAoZXZlbnQpIHtcbiAgICAgICAgdmFyICRjb250cm9sID0gJCh0aGlzKVxuICAgICAgICBoYW5kbGVyKCRjb250cm9sLCBnZXRUb2dnbGVkQ29udGVudCgkY29udHJvbCksIGV2ZW50KVxuICAgICAgfVxuXG4gICAgICAvLyBQcmVwYXJlIEFSSUEgYXR0cmlidXRlc1xuICAgICAgdmFyICRjb250cm9scyA9ICQoZWxlbWVudFNlbGVjdG9yKVxuICAgICAgJGNvbnRyb2xzLmVhY2goaW5pdFRvZ2dsZWRDb250ZW50KVxuXG4gICAgICAvLyBIYW5kbGUgZXZlbnRzXG4gICAgICAkLmVhY2goZXZlbnRTZWxlY3RvcnMsIGZ1bmN0aW9uIChpZHgsIGV2ZW50U2VsZWN0b3IpIHtcbiAgICAgICAgJGNvbnRhaW5lci5vbignY2xpY2suJyArIHNlbGVjdG9ycy5uYW1lc3BhY2UsIGV2ZW50U2VsZWN0b3IsIGRlZmVycmVkKVxuICAgICAgfSlcblxuICAgICAgLy8gQW55IGFscmVhZHkgOmNoZWNrZWQgb24gaW5pdD9cbiAgICAgIGlmICgkY29udHJvbHMuaXMoJzpjaGVja2VkJykpIHtcbiAgICAgICAgJGNvbnRyb2xzLmZpbHRlcignOmNoZWNrZWQnKS5lYWNoKGRlZmVycmVkKVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEdldCBldmVudCBzZWxlY3RvcnMgZm9yIGFsbCByYWRpbyBncm91cHNcbiAgICBmdW5jdGlvbiBnZXRFdmVudFNlbGVjdG9yc0ZvclJhZGlvR3JvdXBzICgpIHtcbiAgICAgIHZhciByYWRpb0dyb3VwcyA9IFtdXG5cbiAgICAgIC8vIEJ1aWxkIGFuIGFycmF5IG9mIHJhZGlvIGdyb3VwIHNlbGVjdG9yc1xuICAgICAgcmV0dXJuICQoc2VsZWN0b3JzLnJhZGlvKS5tYXAoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZ3JvdXBOYW1lID0gJCh0aGlzKS5hdHRyKCduYW1lJylcblxuICAgICAgICBpZiAoJC5pbkFycmF5KGdyb3VwTmFtZSwgcmFkaW9Hcm91cHMpID09PSAtMSkge1xuICAgICAgICAgIHJhZGlvR3JvdXBzLnB1c2goZ3JvdXBOYW1lKVxuICAgICAgICAgIHJldHVybiAnaW5wdXRbdHlwZT1cInJhZGlvXCJdW25hbWU9XCInICsgJCh0aGlzKS5hdHRyKCduYW1lJykgKyAnXCJdJ1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsXG4gICAgICB9KVxuICAgIH1cblxuICAgIC8vIFNldCB1cCByYWRpbyBzaG93L2hpZGUgY29udGVudCBmb3IgY29udGFpbmVyXG4gICAgc2VsZi5zaG93SGlkZVJhZGlvVG9nZ2xlZENvbnRlbnQgPSBmdW5jdGlvbiAoJGNvbnRhaW5lcikge1xuICAgICAgaW5pdCgkY29udGFpbmVyLCBzZWxlY3RvcnMucmFkaW8sIGdldEV2ZW50U2VsZWN0b3JzRm9yUmFkaW9Hcm91cHMoKSwgaGFuZGxlUmFkaW9Db250ZW50KVxuICAgIH1cblxuICAgIC8vIFNldCB1cCBjaGVja2JveCBzaG93L2hpZGUgY29udGVudCBmb3IgY29udGFpbmVyXG4gICAgc2VsZi5zaG93SGlkZUNoZWNrYm94VG9nZ2xlZENvbnRlbnQgPSBmdW5jdGlvbiAoJGNvbnRhaW5lcikge1xuICAgICAgaW5pdCgkY29udGFpbmVyLCBzZWxlY3RvcnMuY2hlY2tib3gsIFtzZWxlY3RvcnMuY2hlY2tib3hdLCBoYW5kbGVDaGVja2JveENvbnRlbnQpXG4gICAgfVxuXG4gICAgLy8gU2V0IHVwIGxpbmtzIHNob3cvaGlkZSBjb250ZW50IGZvciBjb250YWluZXJcbiAgICBzZWxmLnNob3dIaWRlTGlua1RvZ2dsZWRDb250ZW50ID0gZnVuY3Rpb24gKCRjb250YWluZXIpIHtcbiAgICAgIGluaXQoJGNvbnRhaW5lciwgc2VsZWN0b3JzLmxpbmssIFtzZWxlY3RvcnMubGlua10sIGhhbmRsZUxpbmtDb250ZW50KVxuICAgIH1cblxuICAgIC8vIFJlbW92ZSBldmVudCBoYW5kbGVyc1xuICAgIHNlbGYuZGVzdHJveSA9IGZ1bmN0aW9uICgkY29udGFpbmVyKSB7XG4gICAgICAkY29udGFpbmVyID0gJGNvbnRhaW5lciB8fCAkKGRvY3VtZW50LmJvZHkpXG4gICAgICAkY29udGFpbmVyLm9mZignLicgKyBzZWxlY3RvcnMubmFtZXNwYWNlKVxuICAgIH1cbiAgfVxuXG4gIFNob3dIaWRlQ29udGVudC5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgkY29udGFpbmVyKSB7XG4gICAgdGhpcy5zaG93SGlkZVJhZGlvVG9nZ2xlZENvbnRlbnQoJGNvbnRhaW5lcilcbiAgICB0aGlzLnNob3dIaWRlQ2hlY2tib3hUb2dnbGVkQ29udGVudCgkY29udGFpbmVyKVxuICAgIHRoaXMuc2hvd0hpZGVMaW5rVG9nZ2xlZENvbnRlbnQoJGNvbnRhaW5lcilcbiAgfVxuXG4gIEdPVlVLLlNob3dIaWRlQ29udGVudCA9IFNob3dIaWRlQ29udGVudFxuICBnbG9iYWwuR09WVUsgPSBHT1ZVS1xufSkod2luZG93KVxuIiwidmFyIHRvZ2dsZVRpcHMgPSAkKCcudG9nZ2xlLWhlbHAnKTtcblxudG9nZ2xlVGlwcy5lYWNoKGZ1bmN0aW9uICgpIHtcblxuICB2YXIgJHRoYXQsXG4gICAgbGl2ZVJlZ2lvbixcbiAgICBjb250YWluZXIsXG4gICAgdG9nZ2xlVGlwO1xuXG4gICR0aGF0ID0gJCh0aGlzKTtcblxuICBjb250YWluZXIgPSAkKCc8c3BhbiAvPicpLmF0dHIoJ2NsYXNzJywgJ3RvZ2dsZXRpcCcpO1xuXG4gIHRvZ2dsZVRpcCA9ICQoJzxidXR0b24gLz4nKVxuICAgIC5hdHRyKCd0eXBlJywgJ2J1dHRvbicpXG4gICAgLmF0dHIoJ2FyaWEtbGFiZWwnLCAnSGVscCcpXG4gICAgLmF0dHIoJ2RhdGEtdG9nZ2xldGlwLWNvbnRlbnQnLCAkdGhhdC5odG1sKCkpXG4gICAgLnRleHQoJz8nKVxuICAgIC5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgbWVzc2FnZSA9ICQodGhpcykuZGF0YSgndG9nZ2xldGlwLWNvbnRlbnQnKTtcbiAgICAgIHZhciBsaXZlUmVnaW9uID0gJCh0aGlzKS5uZXh0KCk7XG4gICAgICB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGxpdmVSZWdpb24uaHRtbChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuICQoJzxzcGFuIC8+JylcbiAgICAgICAgICAgIC5hdHRyKCdjbGFzcycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuICR0aGF0Lmh0bWwoKS5sZW5ndGggPiA1MCA/ICdidWJibGUgbG9uZycgOiAnYnViYmxlJ1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50ZXh0KG1lc3NhZ2UpXG4gICAgICAgIH0pXG4gICAgICB9LCAxMDApO1xuICAgIH0pXG4gICAgLm9uKCdrZXlkb3duJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGlmICgoZS5rZXlDb2RlIHx8IGUud2hpY2gpID09PSAyNylcbiAgICAgICAgbGl2ZVJlZ2lvbi5odG1sKCcnKTtcbiAgICB9KTtcblxuICBsaXZlUmVnaW9uID0gJCgnPHNwYW4gLz4nKVxuICAgIC5hdHRyKCdyb2xlJywgJ3N0YXR1cycpO1xuXG4gIGNvbnRhaW5lci5hcHBlbmQodG9nZ2xlVGlwLCBsaXZlUmVnaW9uKTtcblxuICAkdGhhdC5iZWZvcmUoY29udGFpbmVyKS5yZW1vdmUoKTtcblxuICAkKGRvY3VtZW50KS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgIGlmICgkdGhhdFswXSAhPT0gJChlLnRhcmdldCkpIHtcbiAgICAgIGxpdmVSZWdpb24uaHRtbCgnJyk7XG4gICAgfVxuICB9KTtcblxufSk7XG4iLCJ2YXIgZm9ybXMgPSAkKCcjY29udGVudCBmb3JtJyk7XG4vL3ZhciBpbnB1dHMgPSBmb3Jtcy5maW5kKCcuZm9ybS1ncm91cCBpbnB1dCcpO1xuXG5mb3Jtcy5hdHRyKCdub3ZhbGlkYXRlJywgJ25vdmFsaWRhdGUnKTtcblxuLypcbmZvcm1zLm9uKCdzdWJtaXQnLCBmdW5jdGlvbiAoKSB7XG4gIGlucHV0cy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmVzdWx0ID0gdGhpcy5jaGVja1ZhbGlkaXR5KCk7XG4gICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgIHNob3dWYWxpZGF0aW9uTWVzc2FnZSh0aGlzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaGlkZVZhbGlkYXRpb25NZXNzYWdlKHRoaXMpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiB0aGlzLmNoZWNrVmFsaWRpdHkoKTtcbn0pO1xuXG5pbnB1dHMub24oJ2JsdXInLCBmdW5jdGlvbiAoKSB7XG4gIHZhciByZXN1bHQgPSB0aGlzLmNoZWNrVmFsaWRpdHkoKTtcbiAgaWYgKCFyZXN1bHQpIHtcbiAgICBzaG93VmFsaWRhdGlvbk1lc3NhZ2UodGhpcyk7XG4gIH0gZWxzZSB7XG4gICAgaGlkZVZhbGlkYXRpb25NZXNzYWdlKHRoaXMpO1xuICB9XG59KTtcblxudmFyIHNob3dWYWxpZGF0aW9uTWVzc2FnZSA9IGZ1bmN0aW9uIChmaWVsZCkge1xuXG4gIHZhciBmaWVsZCA9IGZpZWxkLFxuICAgICRmaWVsZCA9ICQoZmllbGQpLFxuICAgICRwYXJlbnQgPSAkZmllbGQucGFyZW50KCk7XG5cbiAgaWYgKCRwYXJlbnQuaGFzQ2xhc3MoJ3Nob3ctcGFzc3dvcmQnKSkge1xuICAgICRwYXJlbnQgPSAkcGFyZW50LnBhcmVudCgpO1xuICB9XG5cbiAgaWYgKCEkcGFyZW50Lmhhc0NsYXNzKCdmb3JtLWdyb3VwLWVycm9yJykpIHtcblxuICAgIHZhciBsYWJlbFRleHQgPSAkZmllbGQuZGF0YSgnbGFiZWwnKSB8fCAkKFwibGFiZWxbZm9yPSdcIiArICRmaWVsZC5hdHRyKCdpZCcpICsgXCInXVwiKS50ZXh0KCksXG4gICAgICBlcnJvck1lc3NhZ2VUZXh0ID0gJ0VudGVyIGEgdmFsaWQgJyArIGxhYmVsVGV4dC50b0xvd2VyQ2FzZSgpLFxuICAgICAgZXJyb3JNZXNzYWdlID0gJCgnPHA+JylcbiAgICAgICAgLmh0bWwoZXJyb3JNZXNzYWdlVGV4dClcbiAgICAgICAgLnByb3AoJ2NsYXNzJywgJ2Vycm9yLW1lc3NhZ2UnKVxuICAgICAgICAucHJvcCgnaWQnLCAndmFsaWRhdGlvbi0nICsgc2x1Z2lmeShsYWJlbFRleHQpKTtcblxuICAgICRmaWVsZC5iZWZvcmUoZXJyb3JNZXNzYWdlKTtcbiAgICAkcGFyZW50LmFkZENsYXNzKCdmb3JtLWdyb3VwLWVycm9yJyk7XG4gICAgJGZpZWxkLmF0dHIoe1xuICAgICAgJ2FyaWEtZGVzY3JpYmVkYnknIDogJ3ZhbGlkYXRpb24tJyArIHNsdWdpZnkobGFiZWxUZXh0KSxcbiAgICAgICdhcmlhLWludmFsaWQnOiAndHJ1ZSdcbiAgICB9KTtcbiAgfVxufVxuXG52YXIgaGlkZVZhbGlkYXRpb25NZXNzYWdlID0gZnVuY3Rpb24gKGZpZWxkKSB7XG4gIHZhciBmaWVsZCA9IGZpZWxkLFxuICAgICRmaWVsZCA9ICQoZmllbGQpLFxuICAgICRwYXJlbnQgPSAkZmllbGQucGFyZW50KCk7XG5cbiAgaWYgKCRwYXJlbnQuaGFzQ2xhc3MoJ3Nob3ctcGFzc3dvcmQnKSkge1xuICAgICRwYXJlbnQgPSAkcGFyZW50LnBhcmVudCgpO1xuICB9XG5cbiAgJHBhcmVudC5yZW1vdmVDbGFzcygnZm9ybS1ncm91cC1lcnJvcicpO1xuICAkcGFyZW50LmZpbmQoJ3AuZXJyb3ItbWVzc2FnZScpLnJlbW92ZSgpO1xuICAkZmllbGQucmVtb3ZlQXR0cignYXJpYS1kZXNjcmliZWRieScpO1xuICAkZmllbGQucmVtb3ZlQXR0cignYXJpYS1pbnZhbGlkJyk7XG59XG5cbnZhciBzbHVnaWZ5ID0gZnVuY3Rpb24gKHRleHQpIHtcbiAgcmV0dXJuIHRleHQudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpXG4gICAgLnJlcGxhY2UoL1xccysvZywgJy0nKVxuICAgIC5yZXBsYWNlKC9bXlxcd1xcLV0rL2csICcnKVxuICAgIC5yZXBsYWNlKC9cXC1cXC0rL2csICctJylcbiAgICAucmVwbGFjZSgvXi0rLywgJycpXG4gICAgLnJlcGxhY2UoLy0rJC8sICcnKTtcbn1cblxuKi9cbiIsInZhciBOU0EgPSBOU0EgfHwge307XG5cbk5TQSA9IHtcbiAgc2hvd1Bhc3N3b3JkIDogZnVuY3Rpb24gKCkge1xuICAgIHZhciAkc2hvd1Bhc3N3b3JkID0gJCgnLnNob3ctcGFzc3dvcmQnKTtcbiAgICAkc2hvd1Bhc3N3b3JkLmVhY2goZnVuY3Rpb24gKGkpIHtcbiAgICAgIHZhciAkdGhhdCA9ICQodGhpcyk7XG4gICAgICB2YXIgJHB3ZEZsZCA9ICR0aGF0LmZpbmQoJ2lucHV0OnBhc3N3b3JkJyk7XG4gICAgICB2YXIgJGNoZWNrTGJsID0gJCgnPGxhYmVsIC8+JykucHJvcCh7IGZvcjogJ3Nob3ctcGFzc3dvcmQtJyArIGkgfSkuaHRtbCgnU2hvdycpO1xuICAgICAgdmFyICRjaGVja0JveCA9ICQoJzxpbnB1dCAvPicpLnByb3AoeyB0eXBlOiAnY2hlY2tib3gnLCBpZDogJ3Nob3ctcGFzc3dvcmQtJyArIGkgfSkub24oJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyICR0aGF0ID0gJCh0aGlzKTtcbiAgICAgICAgJHB3ZEZsZC5wcm9wKCd0eXBlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiAkdGhhdC5wcm9wKCdjaGVja2VkJykgPyAndGV4dCcgOiAncGFzc3dvcmQnO1xuICAgICAgICB9KTtcbiAgICAgICAgJGNoZWNrTGJsLmh0bWwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiAkdGhhdC5wcm9wKCdjaGVja2VkJykgPyAnSGlkZScgOiAnU2hvdyc7XG4gICAgICAgIH0pO1xuICAgICAgICAkdGhhdC5wYXJlbnQoKS5yZW1vdmVDbGFzcygndHlwZS1wYXNzd29yZCcpO1xuICAgICAgICBpZiAoJHRoYXQucHJvcCgnY2hlY2tlZCcpKSB7XG4gICAgICAgICAgJHRoYXQucGFyZW50KCkuYWRkQ2xhc3MoJ3R5cGUtcGFzc3dvcmQnKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB2YXIgJGNiV3JhcCA9ICQoJzxkaXYgLz4nKS5wcm9wKCdjbGFzcycsICdzaG93LXBhc3N3b3JkLWNvbnRyb2wnKS5hcHBlbmQoJGNoZWNrQm94LCAkY2hlY2tMYmwpO1xuICAgICAgJHB3ZEZsZC5hZnRlcigkY2JXcmFwKTtcbiAgICB9KTtcbiAgfSxcbiAgYmFja0xpbms6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgYmFja0xpbmsgPSAkKCc8YT4nKVxuICAgICAgLmF0dHIoeyAnaHJlZic6ICcjJywgJ2NsYXNzJzogJ2xpbmstYmFjaycgfSlcbiAgICAgIC50ZXh0KCdCYWNrJylcbiAgICAgIC5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkgeyB3aW5kb3cuaGlzdG9yeS5iYWNrKCk7IGUucHJldmVudERlZmF1bHQoKTsgfSk7XG4gICAgJCgnLmpzLWJhY2stbGluaycpLmh0bWwoYmFja0xpbmspO1xuICB9LFxufTtcblxuXG5pZiAoJCgnc2VsZWN0LnNlbGVjdDInKS5sZW5ndGggPiAwKSB7XG4gICQoJ3NlbGVjdC5zZWxlY3QyJykuc2VsZWN0Mih7bWF0Y2hlcjogc2VsZWN0Mk1vZGVsTWF0Y2hlcn0pO1xufVxuXG5mdW5jdGlvbiBzZWxlY3QyTW9kZWxNYXRjaGVyIChwYXJhbXMsIGRhdGEpIHtcbiAgZGF0YS5wYXJlbnRUZXh0ID0gZGF0YS5wYXJlbnRUZXh0IHx8IFwiXCI7XG4gIGlmICgkLnRyaW0ocGFyYW1zLnRlcm0pID09PSAnJykge1xuICAgIHJldHVybiBkYXRhO1xuICB9XG4gIGlmIChkYXRhLmNoaWxkcmVuICYmIGRhdGEuY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgIHZhciBtYXRjaCA9ICQuZXh0ZW5kKHRydWUsIHt9LCBkYXRhKTtcbiAgICBmb3IgKHZhciBjID0gZGF0YS5jaGlsZHJlbi5sZW5ndGggLSAxOyBjID49IDA7IGMtLSkge1xuICAgICAgdmFyIGNoaWxkID0gZGF0YS5jaGlsZHJlbltjXTtcbiAgICAgIGNoaWxkLnBhcmVudFRleHQgKz0gZGF0YS5wYXJlbnRUZXh0ICsgXCIgXCIgKyBkYXRhLnRleHQ7XG4gICAgICB2YXIgbWF0Y2hlcyA9IHNlbGVjdDJNb2RlbE1hdGNoZXIocGFyYW1zLCBjaGlsZCk7XG4gICAgICBpZiAobWF0Y2hlcyA9PSBudWxsKSB7XG4gICAgICAgIG1hdGNoLmNoaWxkcmVuLnNwbGljZShjLCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKG1hdGNoLmNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgIHJldHVybiBtYXRjaDtcbiAgICB9XG4gICAgcmV0dXJuIHNlbGVjdDJNb2RlbE1hdGNoZXIocGFyYW1zLCBtYXRjaCk7XG4gIH1cbiAgdmFyIG9yaWdpbmFsID0gKGRhdGEucGFyZW50VGV4dCArICcgJyArIGRhdGEudGV4dCkudG9VcHBlckNhc2UoKTtcbiAgdmFyIHRlcm0gPSBwYXJhbXMudGVybS50b1VwcGVyQ2FzZSgpO1xuICBpZiAob3JpZ2luYWwuaW5kZXhPZih0ZXJtKSA+IC0xKSB7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59XG5cbmlmICgkKCcuc2hvdy1wYXNzd29yZCcpLmxlbmd0aCA+IDApIHtcbiAgTlNBLnNob3dQYXNzd29yZCgpO1xufVxuXG5pZiAoJCgnLmpzLWJhY2stbGluaycpKSB7XG4gIE5TQS5iYWNrTGluaygpO1xufVxuXG4kKCcudW5kZXItY29uc3RydWN0aW9uJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgYWxlcnQoJ1RoaXMgZnVuY3Rpb25hbGl0eSBpcyBub3QgYXZhaWxhYmxlIHlldCcpO1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG59KTtcblxuaWYgKCQoJy5ub3RpZmljYXRpb24gc3Bhbi5pY29uJykubGVuZ3RoID4gMCkge1xuICAkKCcubm90aWZpY2F0aW9uIHNwYW4uaWNvbicpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAkKHRoaXMpLnBhcmVudCgpLmhpZGUoKTtcbiAgfSk7XG59XG5cbmlmICgkKCdhcnRpY2xlLm9yZ2FuaXNhdGlvbi1zZXJ2aWNlcycpLmxlbmd0aCA+IDApIHtcblxuICAkKCcuaW5mb3JtYXRpb24nKS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgIHZhciBpbmZvID0gJCh0aGlzKS5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCcuc2VydmljZS1kZXNjcmlwdGlvbicpO1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBpbmZvLnRvZ2dsZSgpO1xuICB9KTtcblxuICAkKCcuaW5mby1saW5rJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgbWV0YSA9ICQodGhpcykucGFyZW50KCkubmV4dCgpO1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBtZXRhLnRvZ2dsZSgpO1xuICB9KTtcbn1cblxudmFyIHNlYXJjaEZpZWxkcyA9ICQoJ2Zvcm0gLnNlYXJjaC1maWVsZCcpO1xuXG5pZiAoc2VhcmNoRmllbGRzLmxlbmd0aCA+IDApIHtcblxuICB2YXIgbG9hZGVyID0gJCgnPHNwYW4gLz4nKS5hZGRDbGFzcygnbG9hZGVyIHNwaW5uZXItaW5saW5lJyk7XG4gIHZhciBiMSA9ICQoJzxzcGFuIC8+JykuYWRkQ2xhc3MoJ2JhbGwgYi0xJyk7XG4gIHZhciBiMiA9ICQoJzxzcGFuIC8+JykuYWRkQ2xhc3MoJ2JhbGwgYi0yJyk7XG4gIGxvYWRlci5hcHBlbmQoYjEpLmFwcGVuZChiMik7XG5cbiAgc2VhcmNoRmllbGRzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgIHZhciBmb3JtID0gJCh0aGlzKS5wYXJlbnQoKTtcbiAgICB2YXIgYnV0dG9uID0gZm9ybS5maW5kKCdidXR0b24nKTtcbiAgICBmb3JtLm9uKCdzdWJtaXQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBidXR0b24uYWZ0ZXIobG9hZGVyKS5oaWRlKCk7XG4gICAgfSk7XG4gIH0pO1xufVxuXG52YXIgcmVkaXJlY3QgPSAkKCcjcmVkaXJlY3QtdXJsJyk7XG5cbiQoJyNhZGQtcmVkaXJlY3QnKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgJCgnPHA+PGxhYmVsIGZvcj1cInJlZGlyZWN0LXVybFwiPjxpbnB1dCBjbGFzcz1cImZvcm0tY29udHJvbCBpbnB1dENvbmZpZ1wiIG5hbWU9XCJyZWRpcmVjdF91cmlzXCI+PC9sYWJlbD48L3A+JykuYXBwZW5kVG8ocmVkaXJlY3QpO1xuICByZXR1cm4gZmFsc2U7XG59KTtcblxudmFyIGxvZ291dCA9ICQoJyNsb2dvdXQtdXJsJyk7XG5cbiQoJyNhZGQtbG9nb3V0Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICQoJzxwPjxsYWJlbCBmb3I9XCJsb2dvdXQtdXJsXCI+PGlucHV0IGNsYXNzPVwiZm9ybS1jb250cm9sIGlucHV0Q29uZmlnXCIgbmFtZT1cInBvc3RfbG9nb3V0X3JlZGlyZWN0X3VyaXNcIj48L2xhYmVsPjwvcD4nKS5hcHBlbmRUbyhsb2dvdXQpO1xuICByZXR1cm4gZmFsc2U7XG59KTtcblxuXG4kKCcjZ2VuZXJhdGUtY2xpZW50LXNlY3JldCcpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICB2YXIgc2VjcmV0QXJyYXkgPSB3aW5kb3cubmljZXdhcmUuZ2VuZXJhdGVQYXNzcGhyYXNlKDgpO1xuICB2YXIgc2VjcmV0ID0gc2VjcmV0QXJyYXkuam9pbignLScpO1xuICB2YXIgaXNDb25maXJtID0gY29uZmlybSgnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHJlZ2VuZXJhdGUgdGhlIGNsaWVudCBzZWNyZXQ/Jyk7XG4gIGlmIChpc0NvbmZpcm0pIHtcbiAgICAkKCdpbnB1dCNjbGllbnRTZWNyZXQnKS5hdHRyKCd2YWx1ZScsIHNlY3JldCk7XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufSk7XG5cbiQoJyNnZW5lcmF0ZS1hcGktc2VjcmV0Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gIHZhciBzZWNyZXRBcnJheSA9IHdpbmRvdy5uaWNld2FyZS5nZW5lcmF0ZVBhc3NwaHJhc2UoOCk7XG4gIHZhciBzZWNyZXQgPSBzZWNyZXRBcnJheS5qb2luKCctJyk7XG4gIHZhciBpc0NvbmZpcm0gPSBjb25maXJtKCdBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gcmVnZW5lcmF0ZSB0aGUgYXBpIHNlY3JldD8nKTtcbiAgaWYgKGlzQ29uZmlybSkge1xuICAgICQoJ2lucHV0I2FwaVNlY3JldCcpLmF0dHIoJ3ZhbHVlJywgc2VjcmV0KTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59KTtcblxudmFyIGZvcm1SZWdpc3RlciA9ICQoJy5wcmV2ZW50LWZvcm0tZG91YmxlLXN1Ym1pc3Npb24nKTtcblxuaWYgKGZvcm1SZWdpc3Rlci5sZW5ndGggPiAwKSB7XG4gIGZvcm1SZWdpc3Rlci5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgJHN1Ym1pdEJ1dHRvbnMgPSAkKGZvcm1SZWdpc3RlcikuZmluZCgnYnV0dG9uOnN1Ym1pdCcpLCAkc3VibWl0QnV0dG9uID0gJHN1Ym1pdEJ1dHRvbnMuZXEoMCk7XG4gICAgZm9ybVJlZ2lzdGVyLm9uKCdzdWJtaXQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAkc3VibWl0QnV0dG9ucy5hdHRyKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xuXG4gICAgICAkc3VibWl0QnV0dG9uLmNzcygnbWluLXdpZHRoJywgJHN1Ym1pdEJ1dHRvbi5vdXRlcldpZHRoKCkgKyAncHgnKTtcblxuICAgICAgJHN1Ym1pdEJ1dHRvbi5hcHBlbmQoXCI8c3BhbiBjbGFzcz0nbG9hZGVyIHNwaW5uZXItaW5saW5lJz4gPHNwYW4gY2xhc3M9J2JhbGwgYi0xJz48L3NwYW4+IDxzcGFuIGNsYXNzPSdiYWxsIGItMic+PC9zcGFuPiA8c3BhbiBjbGFzcz0nYmFsbCBiLTMnPjwvc3Bhbj4gPC9zcGFuPlwiKTtcblxuICAgIH0pO1xuICB9KTtcbn1cblxudmFyIHNob3dIaWRlQ29udGVudCA9IG5ldyBHT1ZVSy5TaG93SGlkZUNvbnRlbnQoKVxuc2hvd0hpZGVDb250ZW50LmluaXQoKVxuXG5HT1ZVSy5kZXRhaWxzLmluaXQoKVxuXG4iXX0=
