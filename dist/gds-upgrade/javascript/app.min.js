var COOKIE_NAMES={PREFERENCES_SET:"cookies_preferences_set",POLICY:"cookies_policy",GA:"_ga",GA_GID:"_gid",GA_GAT:"_gat",USER_BANNER_LAST_SEEN:"user_banner_last_seen"},GOVUK_COOKIE_OPTIONS={expires:365,secure:!0,domain:".education.gov.uk"},GovUKCookie={getRaw:function(e){if(window.Cookies)return window.Cookies.get(e)},get:function(e){if(window.Cookies){var t=window.Cookies.get(e);return t?JSON.parse(t):t}},set:function(e,t){if(window.Cookies)return window.Cookies.set(e,t,GOVUK_COOKIE_OPTIONS)},remove:function(e){if(window.Cookies)return window.Cookies.remove(e,GOVUK_COOKIE_OPTIONS)}};function checkConditionForUsersBanner(){var e=GovUKCookie.getRaw(COOKIE_NAMES.USER_BANNER_LAST_SEEN);return!e||((new Date).getTime()-e)/864e5>90}function showReviewUsersBanner(){$("#review-users-banner").show()}function setReviewUsersBannerLastSeen(){GovUKCookie.set(COOKIE_NAMES.USER_BANNER_LAST_SEEN,(new Date).getTime())}function loadReviewUsersBanner(){checkConditionForUsersBanner()&&showReviewUsersBanner()}function updateCookieReviewUsersBanner(){checkConditionForUsersBanner()&&setReviewUsersBannerLastSeen()}GovUKCookie.remove(COOKIE_NAMES.POLICY),GovUKCookie.remove(COOKIE_NAMES.PREFERENCES_SET),GovUKCookie.remove(COOKIE_NAMES.GA),GovUKCookie.remove(COOKIE_NAMES.GA_GAT),GovUKCookie.remove(COOKIE_NAMES.GA_GID),function(e){"use strict";var t=e.GOVUK||{};t.details={NATIVE_DETAILS:"boolean"==typeof document.createElement("details").open,KEY_ENTER:13,KEY_SPACE:32,started:!1,addEvent:function(e,t,n){e.addEventListener?e.addEventListener(t,(function(e){n(e,e.target)}),!1):e.attachEvent&&e.attachEvent("on"+t,(function(e){n(e,e.srcElement)}))},removeEvent:function(e,t){e.removeEventListener?e.removeEventListener(t,(function(e){}),!1):e.detachEvent&&e.detachEvent("on"+t,(function(e){}))},charCode:function(e){return"number"==typeof e.which?e.which:e.keyCode},preventDefault:function(e){e.preventDefault?e.preventDefault():e.returnValue=!1},addClickEvent:function(e,n){t.details.addEvent(e,"keypress",(function(e,a){t.details.charCode(e)!==t.details.KEY_ENTER&&t.details.charCode(e)!==t.details.KEY_SPACE||"summary"===a.nodeName.toLowerCase()&&(t.details.preventDefault(e),a.click?a.click():n(e,a))})),t.details.addEvent(e,"keyup",(function(e,n){t.details.charCode(e)===t.details.KEY_SPACE&&"SUMMARY"===n.nodeName&&t.details.preventDefault(e)})),t.details.addEvent(e,"click",(function(e,t){n(e,t)}))},getAncestor:function(e,t){do{if(!e||e.nodeName.toLowerCase()===t)break;e=e.parentNode}while(e);return e},addDetailsPolyfill:function(e,n){if(n=n||document.body,!t.details.started&&(t.details.started=!0,0!==(e=n.getElementsByTagName("details")).length)){for(var a=e.length,i=0;i<a;i++){var o=e[i];if(o.__summary=o.getElementsByTagName("summary").item(0),o.__content=o.getElementsByTagName("div").item(0),!o.__summary||!o.__content)return;o.__content.id||(o.__content.id="details-content-"+i),o.setAttribute("role","group"),o.__summary.setAttribute("role","button"),o.__summary.setAttribute("aria-controls",o.__content.id),t.details.NATIVE_DETAILS||(o.__summary.tabIndex=0);var r=null!==o.getAttribute("open");if(!0===r?(o.__summary.setAttribute("aria-expanded","true"),o.__content.setAttribute("aria-hidden","false")):(o.__summary.setAttribute("aria-expanded","false"),o.__content.setAttribute("aria-hidden","true"),t.details.NATIVE_DETAILS||(o.__content.style.display="none")),o.__summary.__details=o,!t.details.NATIVE_DETAILS){var s=document.createElement("i");!0===r?(s.className="arrow arrow-open",s.appendChild(document.createTextNode("▼"))):(s.className="arrow arrow-closed",s.appendChild(document.createTextNode("►"))),o.__summary.__twisty=o.__summary.insertBefore(s,o.__summary.firstChild),o.__summary.__twisty.setAttribute("aria-hidden","true")}}t.details.addClickEvent(n,(function(e,n){return!(n=t.details.getAncestor(n,"summary"))||t.details.statechange(n)}))}},statechange:function(e){var n="true"===e.__details.__summary.getAttribute("aria-expanded"),a="true"===e.__details.__content.getAttribute("aria-hidden");(e.__details.__summary.setAttribute("aria-expanded",n?"false":"true"),e.__details.__content.setAttribute("aria-hidden",a?"false":"true"),t.details.NATIVE_DETAILS)||(e.__details.__content.style.display=n?"none":"",null!==e.__details.getAttribute("open")?e.__details.removeAttribute("open"):e.__details.setAttribute("open","open"));return e.__twisty&&(e.__twisty.firstChild.nodeValue=n?"►":"▼",e.__twisty.setAttribute("class",n?"arrow arrow-closed":"arrow arrow-open")),!0},destroy:function(e){t.details.removeEvent(e,"click")},init:function(e){t.details.addEvent(document,"DOMContentLoaded",t.details.addDetailsPolyfill),t.details.addEvent(window,"load",t.details.addDetailsPolyfill)}},e.GOVUK=t}(window);var NSA=NSA||{},filterBoxes=$(".filter-box");function getParameterByName(e,t){t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");var n=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}function sortTable(e){var t,n,a,i,o,r,s,l,d=0;for(t=$("table.sortable"),a=!0,l="a";a;){for(a=!1,n=t.find("tr"),i=1;i<n.length-1;i++)if(s=!1,o=n[i].getElementsByTagName("TD")[e],r=n[i+1].getElementsByTagName("TD")[e],"a"===l){if(o.innerHTML.toLowerCase()>r.innerHTML.toLowerCase()){s=!0;break}}else if("d"===l&&o.innerHTML.toLowerCase()<r.innerHTML.toLowerCase()){s=!0;break}s?(n[i].parentNode.insertBefore(n[i+1],n[i]),a=!0,d++):0===d&&"a"===l&&(l="d",a=!0)}return l}NSA.filters={init:function(){filterBoxes.each((function(){var e=$(this),t=e.find(".container-head"),n=t.find(".option-select-label"),a=e.find("input:checkbox"),i=$("<button />").addClass("js-container-head"),o=$("<div />").addClass("js-selected-counter");i.on("click",(function(e){var t=$(this).next();$(this).hasClass("closed")?(t.show(),$(this).removeClass("closed").attr("aria-expanded",!0)):(t.hide(),$(this).addClass("closed").attr("aria-expanded",!1)),e.preventDefault()})).append(n,o),t.replaceWith(i),a.on("change",(function(){o.text((function(){return a.filter(":checked").length>0?a.filter(":checked").length+" selected":""}))}))}))}},filterBoxes.length>0&&NSA.filters.init(),(NSA=NSA||{}).modal={elems:{links:$(".modal-link"),modals:$(".modal")},init:function(){this.modalBg(),this.setUpEvents()},modalBg:function(){var e=this,t=$("<div>").addClass("modal-bg").hide().on("click",(function(){e.hideModals()}));$("body").append(t)},setUpEvents:function(){var e=this;this.elems.links.on("click",(function(t){var n=$(this).attr("href");e.showModal($(n)),t.preventDefault()})),e.elems.modals.find(".close").on("click",(function(t){e.hideModals(),t.preventDefault()})),$("body").on("keydown",(function(t){27===(t.keyCode||t.which)&&e.hideModals()}))},showModal:function(e){$("html").addClass("modal-open"),$(".modal-bg").show(),e.show()},hideModals:function(){$("html").removeClass("modal-open"),$(".modal-bg").hide(),this.elems.modals.hide()}},NSA.modal.init(),function(e){"use strict";var t=e.jQuery,n=e.GOVUK||{};function a(){var e=this,n="ShowHideContent",a='[data-target] > input[type="radio"]',i='[data-target] > input[type="checkbox"]',o="a.js-toggle-content";function r(){var e=t(this),n=s(e);n.length&&(e.attr("aria-controls",n.attr("id")),e.attr("aria-expanded","false"),n.attr("aria-hidden","true"))}function s(e){var n=e.attr("aria-controls");return n||(n=e.closest("[data-target]").data("target")),t("#"+n)}function l(e,t){t.hasClass("js-hidden")&&(t.removeClass("js-hidden"),t.attr("aria-hidden","false"),e.attr("aria-controls")&&e.attr("aria-expanded","true"))}function d(e,t){(t=t||s(e)).hasClass("js-hidden")||(t.addClass("js-hidden"),t.attr("aria-hidden","true"),e.attr("aria-controls")&&e.attr("aria-expanded","false"))}function c(e,n){var i=a+"[name="+(e.attr("name").replace("[","\\[").replace("]","\\]")+"][aria-controls]"),o=e.closest("form");(o.length?o.find(i):t(i)).each((function(){d(t(this))})),e.is("[aria-controls]")&&l(e,n)}function u(e,t){e.is(":checked")?l(e,t):d(e,t)}function h(e,t,n){t.hasClass("js-hidden")?l(e,t):d(e,t),n.preventDefault()}function m(e,a,i,o){function l(e){var n=t(this);o(n,s(n),e)}e=e||t(document.body);var d=t(a);d.each(r),t.each(i,(function(t,a){e.on("click."+n,a,l)})),d.is(":checked")&&d.filter(":checked").each(l)}e.showHideRadioToggledContent=function(e){var n;m(e,a,(n=[],t(a).map((function(){var e=t(this).attr("name");return-1===t.inArray(e,n)?(n.push(e),'input[type="radio"][name="'+t(this).attr("name")+'"]'):null}))),c)},e.showHideCheckboxToggledContent=function(e){m(e,i,[i],u)},e.showHideLinkToggledContent=function(e){m(e,o,[o],h)},e.destroy=function(e){(e=e||t(document.body)).off("."+n)}}a.prototype.init=function(e){this.showHideRadioToggledContent(e),this.showHideCheckboxToggledContent(e),this.showHideLinkToggledContent(e)},n.ShowHideContent=a,e.GOVUK=n}(window),(NSA=NSA||{}).signin={form:$(".form-signin"),init:function(){this.setupEvents()},setupEvents:function(){this.form.on("submit",this,this.handleSubmit)},handleSubmit:function(e){var t=$(this),n=t.find("input").not(":checkbox"),a={},i=$(this).find("button:submit"),o=i.eq(0);i.attr("disabled","disabled"),o.css("min-width",o.outerWidth()+"px"),o.find(".loader").removeClass("vh"),n.each((function(){a[this.name]=$(this).val()})),$(".password-input").each((function(e){$(this).attr("type","password"),$(this).siblings(".show-password").html("Show")})),$.ajax({type:"POST",data:a,url:t.attr("action"),context:e.data,dataType:"json",success:function(e){e.redirect?(window.location.href=e.uri,$("title").html("DfE Sign-in")):e.isFailedLogin?(this.resetValidation(t),$("title").html("Error: DfE Sign-in"),e.delayTill?this.showValidationMessage(e.validationMessages,!0):(this.showValidationMessage(e.validationMessages),i.removeAttr("disabled")),this.showInlineValidation(e.validationMessages),o.find(".loader").addClass("vh")):this.buildFormAndSubmit(e)},error:function(){this.resetValidation(t),this.showValidationMessage(),i.removeAttr("disabled"),o.find(".loader").addClass("vh")}}),e.preventDefault()},resetValidation:function(e){$(".govuk-error-summary").remove(),e.find(".govuk-form-group").each((function(){var e=$(this).find("input").eq(0);$(this).hasClass("govuk-form-group--error")&&($(this).removeClass("govuk-form-group--error"),$(this).find("span.govuk-error-message").remove(),e.removeAttr("aria-describedby").removeAttr("aria-invalid"))}))},showValidationMessage:function(e,t){var n=$("<div />").attr("class","govuk-error-summary govuk-!-margin-top-6").attr("role","alert").attr("tabindex","-1").attr("aria-labelledby","error-summary-title"),a=$("<h2 />").attr("class","govuk-error-summary__title").attr("id","error-summary"),i=$("<div />").attr("class","govuk-error-summary__body"),o=$("<ul />").attr("class","govuk-list govuk-error-summary__list");if(e){if(a.text("There is a problem"),$.each(e,(function(e,t){"loginError"===e&&(e="username");var n=$("<a />").attr("class","govuk-link").attr("href","#"+e).text(t),a=$("<li />").append(n);o.append(a)})),t){var r=$("<a />").attr("class","govuk-link-bold").attr("href","").attr("onclick","window.location.reload()").text("Refresh this page").css("color","#1d70b8"),s=$("<li />").append(r);o.append(s)}}else{a.text("There has been an error");s=$("<li />").html('Please try again later. If the problem continues, follow the link to <a href="https://help.signin.education.gov.uk/contact/form">submit a support request</a>');o.append(s)}n.append(a).append(i.append(o)),$("main").prepend(n),$("html, body").animate({scrollTop:n.offset().top-15},300)},showInlineValidation:function(e){$.each(e,(function(e,t){var n=$("input[name="+e+"]"),a=n.parent(),i=a.find("label").first();if(!a.hasClass("govuk-form-group--error"))var o=$('<span class="govuk-body">').html('<span class="govuk-visually-hidden">Error:</span>'+t).prop("class","govuk-error-message").prop("id","validation-"+e);i.after(o),a.addClass("govuk-form-group--error"),n.attr({"aria-describedby":"validation-"+e,"aria-invalid":"true"})}))},buildFormAndSubmit:function(e){var t=$("<form />").attr({method:"post",action:e.destination,id:"dfesigninform"});$.each(e.postbackData,(function(e,n){var a=$("<input />").attr({type:"hidden",name:e,value:n});t.append(a)})),$("#dfesigninform").remove(),$("body").append(t),t.submit()}},$(".form-signin").length>0&&NSA.signin.init(),$((function(){$("table.sortable thead th").on("click",(function(){var e=$("table.sortable thead tr th");e.removeClass("sorted").removeClass("dir-a").removeClass("dir-d");var t=sortTable(e.index($(this)));$(this).addClass("sorted dir-"+t)}))}));var toggleTips=$(".toggle-help");function validatePassword(){var e=$(this).attr("id"),t=[{Pattern:/(.*[A-Z]){2}/,Target:`upper-case-${e}`},{Pattern:/(.*[a-z]){2}/,Target:`lower-case-${e}`},{Pattern:/(.*\d){2}/,Target:`numbers-${e}`}],n=$(this).val();$(`#length-${e}`).removeClass(n.length>7?"icon-remove":"icon-ok"),$(`#length-${e}`).addClass(n.length>7?"icon-ok":"icon-remove");for(var a=0;a<t.length;a++)$("#"+t[a].Target).removeClass(new RegExp(t[a].Pattern).test(n)?"icon-remove":"icon-ok"),$("#"+t[a].Target).addClass(new RegExp(t[a].Pattern).test(n)?"icon-ok":"icon-remove")}toggleTips.each((function(){var e,t,n,a;e=$(this),n=$("<span />").attr("class","toggletip"),a=$("<button />").attr("type","button").attr("aria-label","Help").attr("data-toggletip-content",e.html()).text("?").on("click",(function(){var t=$(this).data("toggletip-content"),n=$(this).next();window.setTimeout((function(){n.html((function(){return $("<span />").attr("class",(function(){return e.html().length>50?"bubble long":"bubble"})).text(t)}))}),100)})).on("keydown",(function(e){27===(e.keyCode||e.which)&&t.html("")})),t=$("<span />").attr("role","status"),n.append(a,t),e.before(n).remove(),$(document).on("click",(function(n){e[0]!==$(n.target)&&t.html("")}))})),$(".password-input-check").each((function(e,t){var n=$(this),a=n.attr("id"),i=$(`<div id='validation-feedback-${a}'>`).append(`<div id='length-${a}' class='icon-remove'>8 characters minimum</div>`).append(`<div id='upper-case-${a}' class='icon-remove'>contain at least 2 upper-case characters</div>`).append(`<div id='lower-case-${a}' class='icon-remove'>contain at least 2 lower-case characters</div>`).append(`<div id='numbers-${a}' class='icon-remove' style='margin-bottom: 6px;'>contain at least 2 numbers</div>`);n.before(i)})),$(".password-input-check").on("keyup",validatePassword);var forms=$("#content form");forms.attr("novalidate","novalidate");NSA=NSA||{};function select2ModelMatcher(e,t){if(t.parentText=t.parentText||"",void 0===e.term||!e.term||""===e.term.trim())return t;if(t.children&&t.children.length>0){for(var n=$.extend(!0,{},t),a=t.children.length-1;a>=0;a--){var i=t.children[a];i.parentText+=t.parentText+" "+t.text,null==select2ModelMatcher(e,i)&&n.children.splice(a,1)}return n.children.length>0?n:select2ModelMatcher(e,n)}var o=(t.parentText+" "+t.text).toUpperCase(),r=e.term.toUpperCase();return o.indexOf(r)>-1?t:null}NSA={initialiseShowPassword:function(){$(".password-input").each((function(e){var t=$(this),n=$("<button />").prop({type:"button",class:"show-password govuk-button govuk-button--secondary govuk-!-margin-bottom-1",ariaLabel:ariaLabel="Show password"});n.html("Show"),n.on("click",(function(){"password"===t.attr("type")?(t.attr("type","text"),n.text("Hide")):(t.attr("type","password"),n.text("Show"))})),t.after(n)}))},backLink:function(){var e=$("<a>").attr({href:"#",class:"govuk-back-link-bold"}).text("Back").on("click",(function(e){window.history.back(),e.preventDefault()}));$(".js-back-link").html(e)}},$("select.select2").length>0&&$("select.select2").select2({matcher:select2ModelMatcher}),$(".password-input").length>0&&NSA.initialiseShowPassword(),$(".js-back-link")&&NSA.backLink(),$(".under-construction").on("click",(function(e){alert("This functionality is not available yet"),e.preventDefault()})),$(".notification span.icon").length>0&&$(".notification span.icon").on("click",(function(){$(this).parent().hide()})),$("article.organisation-services").length>0&&($(".information").on("click",(function(e){var t=$(this).parent().parent().find(".service-description");e.preventDefault(),t.toggle()})),$(".info-link").on("click",(function(e){var t=$(this).parent().next();e.preventDefault(),t.toggle()})));var searchFields=$("form .search-field");if(searchFields.length>0){var loader=$("<span />").addClass("loader spinner-inline"),b1=$("<span />").addClass("ball b-1"),b2=$("<span />").addClass("ball b-2");loader.append(b1).append(b2),searchFields.each((function(){var e=$(this).parent(),t=e.find("button");e.on("submit",(function(){t.after(loader).hide()}))}))}var redirect=$("#redirect-url");$("#add-redirect").on("click",(function(){return $('<p class="govuk-body"><label for="redirect-url"><input class="form-control inputConfig govuk-input" name="redirect_uris"></label></p>').appendTo(redirect),!1}));var logout=$("#logout-url");$("#add-logout").on("click",(function(){return $('<p class="govuk-body"><label for="logout-url"><input class="form-control inputConfig govuk-input" name="post_logout_redirect_uris"></label></p>').appendTo(logout),!1})),$("#generate-client-secret").on("click",(function(){var e=window.niceware.generatePassphrase(8).join("-");return confirm("Are you sure you want to regenerate the client secret?")&&($("input#clientSecret").attr("value",e),$("#saveButton").prop("disabled",!1)),!1})),$("#generate-api-secret").on("click",(function(){var e=window.niceware.generatePassphrase(8).join("-");return confirm("Are you sure you want to regenerate the api secret?")&&($("input#apiSecret").attr("value",e),$("#saveButton").prop("disabled",!1)),!1}));var formRegister=$(".prevent-form-double-submission");formRegister.length>0&&formRegister.each((function(){var e=$(formRegister).find("button:submit"),t=e.eq(0);formRegister.on("submit",(function(){e.attr("disabled","disabled"),t.css("min-width",t.outerWidth()+"px"),t.append("<span class='loader spinner-inline'> <span class='ball b-1'></span> <span class='ball b-2'></span> <span class='ball b-3'></span> </span>")}))})),$(".auto-scroll-on-change").on("change",(function(e){$(window).scrollTop($(".auto-scroll-dest").position().top)})),$(".close-button").on("click",(function(e){e.target.closest(".govuk-notification-banner").remove()})),$(".toggle-open").on("click",(function(e){var t=$(this).next();e.preventDefault(),t.removeClass("govuk-visually-hidden"),$(this).addClass("govuk-visually-hidden")}));var timeoutTimer,tabId=(new Date).getTime();function sessionTimeout(){localStorage.removeItem("uri"),window.onfocus=function(){countTimeDiff()},setTimeout((function(){localStorage.setItem("tabs","1"),$(".session-timeout-overlay").show(),$("#modal-signin").focus(),startTimer()}),826e3)}function startTimer(){var e="4 minutes and 60 seconds";timeoutTimer=setInterval((function(){"0"===localStorage.getItem("tabs")&&(clearInterval(timeoutTimer),location.reload());var t=e.split("and"),n=parseInt(t[0],10),a=parseInt(t[1],10);n=--a<0?--n:n,a=(a=a<0?59:a)<10?"0"+a:a,$("#minutes").html(n),$("#seconds").html(a),n<0||a<=0&&n<=0?callTimeout():tabId&&countTimeDiff(),e=n+" minutes and "+a+" seconds"}),1e3)}function callTimeout(){clearInterval(timeoutTimer),localStorage.setItem("uri",location.pathname),location.href="/signout"}function countTimeDiff(){((new Date).getTime()-Number(tabId))/6e4>20&&(localStorage.setItem("uri",location.pathname),clearInterval(timeoutTimer),location.reload())}$("#modal-signin").on("click",(()=>{clearInterval(timeoutTimer),localStorage.setItem("tabs","0"),location.reload()})),$("#modal-signout").on("click",(()=>{clearInterval(timeoutTimer),location.href="/signout"}));var showHideContent=new GOVUK.ShowHideContent;showHideContent.init(),GOVUK.details.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
